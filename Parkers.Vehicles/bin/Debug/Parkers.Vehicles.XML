<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Parkers.Vehicles</name>
    </assembly>
    <members>
        <member name="T:Parkers.Vehicles.VanClassificationProvider">
            <summary>
            The van classification provider
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanClassificationProvider">
            <summary>
            Van classification provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVanClassificationProvider.GetClassification(System.Int32)">
            <summary>
            Gets a classification from the id.
            </summary>
            <param name="id">The classification id.</param>
            <returns>The classification</returns>
        </member>
        <member name="F:Parkers.Vehicles.VanClassificationProvider.classifications">
            <summary>
            Year plates collection
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanClassificationProvider.GetClassification(System.Int32)">
            <summary>
            Gets a classification from the id.
            </summary>
            <param name="id">The classification id.</param>
            <returns>The classification</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanClassificationProvider.PopulateFromDatabase">
            <summary>
            Populates the collection of classifications from the database.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ISortableVehicleProvider">
            <summary>
            sortable vehicle provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ISortableVehicleProvider.GetSortModelFromId(System.Int32)">
            <summary>
            Gets the sort model from id.
            </summary>
            <param name="id">The model id.</param>
            <returns>The model</returns>
        </member>
        <member name="T:Parkers.Vehicles.IDealer">
            <summary>
            The vehicle for sale dealer interface
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.DealerId">
            <summary>
            Gets or sets the dealerid.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.SupplierId">
            <summary>
            Gets or sets the supplier id.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.Address">
            <summary>
            Gets or sets the address.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.AddressElements">
            <summary>
            Gets the address elements.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.Town">
            <summary>
            Gets or sets the town.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDealer.Postcode">
            <summary>
            Gets or sets the postcode.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Dealer">
            <summary>
            Represents a vehicle for sale dealer
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Dealer.addressElements">
            <summary>
            Address elements back field
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.Dealer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Parkers.Vehicles.Dealer"/> class.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.DealerId">
            <summary>
            Gets or sets the dealer id.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.SupplierId">
            <summary>
            Gets or sets the supplier id.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.Address">
            <summary>
            Gets or sets the address.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.AddressElements">
            <summary>
            Gets the address elements.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.Town">
            <summary>
            Gets or sets the town.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Dealer.Postcode">
            <summary>
            Gets or sets the postcode.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.TaxRate">
            <summary>
            The tax rate class
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ITaxRate">
            <summary>
            The tax rate interface
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IKeyValueMappable">
            <summary>
            Defines types that can be mapped to a convention based key value pair
            that uses Id property for key and DisplayName for value
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IEntity">
            <summary>
            Contract for an entity that exposes an Id property 
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IEntity.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id value.</value>
        </member>
        <member name="P:Parkers.Vehicles.IKeyValueMappable.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ITaxRate.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxRate.Rate">
            <summary>
            Gets the rate.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxRate.MinimumTaxableValue">
            <summary>
            Gets the minimum taxable value.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxRate.MaximumTaxableValue">
            <summary>
            Gets the maximum taxable value.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxRate.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxRate.Rate">
            <summary>
            Gets or sets the rate.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxRate.MinimumTaxableValue">
            <summary>
            Gets or sets the minimum taxable value.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxRate.MaximumTaxableValue">
            <summary>
            Gets or sets the maximum taxable value.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxRate.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.TaxRate.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id value.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.TaxYear">
            <summary>
            the tax rate class
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ITaxYear">
            <summary>
            The tax year interface
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxYear.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxYear.StartYear">
            <summary>
            Gets the start year.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxYear.PersonalIncomeTaxAllowance">
            <summary>
            Gets the personal income tax allowance.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITaxYear.Rates">
            <summary>
            Gets the tax rates.
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.TaxYear.rates">
            <summary>
            The tax rate collection
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxYear.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxYear.StartYear">
            <summary>
            Gets or sets the start year.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxYear.PersonalIncomeTaxAllowance">
            <summary>
            Gets or sets the personal income tax allowance.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxYear.Rates">
            <summary>
            Gets the tax rates.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxYear.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.TaxYear.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IComingSoonProvider">
            <summary>
            Coming Soon provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IComingSoonProvider.GetActiveComingSoons">
            <summary>
            Gets the active coming soons.
            </summary>
            <returns>List of coming soons</returns>
        </member>
        <member name="M:Parkers.Vehicles.IComingSoonProvider.GetComingSoonFromId(System.Int32)">
            <summary>
            Gets the coming soon from id.
            </summary>
            <param name="id">The 'coming soon' id.</param>
            <returns>A coming soon</returns>
        </member>
        <member name="T:Parkers.Vehicles.IDealerProvider">
            <summary>
            The dealer provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IDealerProvider.GetDealer(System.Int32,System.Int32)">
            <summary>
            Gets the dealer.
            </summary>
            <param name="supplierId">The supplier id.</param>
            <param name="dealerId">The dealer id.</param>
            <returns>The dealer object</returns>
        </member>
        <member name="M:Parkers.Vehicles.IDealerProvider.GetDealer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the dealer.
            </summary>
            <param name="name">The name value.</param>
            <param name="address">The address value.</param>
            <param name="phoneNumber">The phone number.</param>
            <param name="postcode">The postcode.</param>
            <param name="town">The town value.</param>
            <returns>The dealer object</returns>
        </member>
        <member name="T:Parkers.Vehicles.IFuelPriceProvider">
            <summary>
            Fuel Price provider interface
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IFuelPriceProvider.DieselPrice">
            <summary>
            Gets the diesel price.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IFuelPriceProvider.HasRealValues">
            <summary>
            Gets or sets a value indicating whether this instance has real values.
            </summary>
            <value>
            <c>true</c> if this instance has real values; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IFuelPriceProvider.PetrolPrice">
            <summary>
            Gets the petrol price.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.DealerProvider">
            <summary>
            The cars for sale dealer provider
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DealerProvider.DatabaseName">
            <summary>
            The database name
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.DealerProvider.GetDealer(System.Int32,System.Int32)">
            <summary>
            Gets the dealer.
            </summary>
            <param name="supplierId">The supplier id.</param>
            <param name="dealerId">The dealer id.</param>
            <returns>
            The dealer object
            </returns>
        </member>
        <member name="M:Parkers.Vehicles.DealerProvider.GetDealer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the dealer.
            </summary>
            <param name="name">The name value.</param>
            <param name="address">The address value.</param>
            <param name="phoneNumber">The phone number.</param>
            <param name="postcode">The postcode.</param>
            <param name="town">The town value.</param>
            <returns>
            The dealer object
            </returns>
        </member>
        <member name="M:Parkers.Vehicles.DealerProvider.GetDealerFromDatabase(System.Int32,System.Int32)">
            <summary>
            Gets the dealer from database.
            </summary>
            <param name="supplierId">The supplier id.</param>
            <param name="dealerId">The dealer id.</param>
            <returns>The dealer object</returns>
        </member>
        <member name="M:Parkers.Vehicles.DealerProvider.GetGetDealerFromRecord(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets the get dealer from record.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The dealer object</returns>
        </member>
        <member name="M:Parkers.Vehicles.DealerProvider.CreateDealer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the dealer.
            </summary>
            <param name="name">The name value.</param>
            <param name="address">The address.</param>
            <param name="phoneNumber">The phone number.</param>
            <param name="postcode">The postcode.</param>
            <param name="town">The town value.</param>
            <returns>The dealer object</returns>
        </member>
        <member name="T:Parkers.Vehicles.IVanReviewProvider">
            <summary>
            Van review provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVanReviewProvider.GetDerivativesFromId(System.Int32)">
            <summary>
            Gets the derivatives from id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>List of van derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanReviewProvider.GetReviewFromId(System.Int32)">
            <summary>
            Gets the review from id.
            </summary>
            <param name="id">The review id.</param>
            <returns>The van review</returns>
        </member>
        <member name="T:Parkers.Vehicles.ITaxonomyProvider">
            <summary>
            Taxonomy provider interface - represents utility methods to extract vehicle taxonomy related data
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ITaxonomyProvider.GetModelsInRange(Parkers.Vehicles.ListOfModel,Parkers.Vehicles.IRange)">
            <summary>
            Gets the models in range.
            </summary>
            <param name="models">The models.</param>
            <param name="ran">The range.</param>
            <returns>List of models</returns>
        </member>
        <member name="M:Parkers.Vehicles.ITaxonomyProvider.GetRangesWithName(Parkers.Vehicles.ListOfModel,System.String)">
            <summary>
            Gets the name of the ranges with.
            </summary>
            <param name="models">The models.</param>
            <param name="rangeName">Name of the range.</param>
            <returns>List of ranges</returns>
        </member>
        <member name="M:Parkers.Vehicles.ITaxonomyProvider.GetUniqueRanges(Parkers.Vehicles.ListOfModel)">
            <summary>
            Gets the unique ranges.
            </summary>
            <param name="models">The models.</param>
            <returns>The list of ranges</returns>
        </member>
        <member name="T:Parkers.Vehicles.IVanProvider">
            <summary>
            Van provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetDerivativeFromCapCode(System.String)">
            <summary>
            Gets the derivative from cap code.
            </summary>
            <param name="capCode">The cap code.</param>
            <returns>Van derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetDerivativeFromId(System.Int32)">
            <summary>
            Gets the derivative from id.
            </summary>
            <param name="id">The derivative id.</param>
            <returns>Van derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetDerivativesFromId(System.Int32)">
            <summary>
            Gets the derivatives from id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>list of van derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetManufacturerFromId(System.Int32)">
            <summary>
            Gets the manufacturer from id.
            </summary>
            <param name="id">The manufacturer id.</param>
            <returns>Van manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetImagesByModelId(System.Int32)">
            <summary>
            Gets the images by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>Collection of review images</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetManufacturers">
            <summary>
            Gets the manufacturers.
            </summary>
            <returns>List of van manufacturers</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetModelFromId(System.Int32)">
            <summary>
            Gets the model from id.
            </summary>
            <param name="id">The model id.</param>
            <returns>The Van model</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetModelsByManufacturerId(System.Int32)">
            <summary>
            Gets the models by manufacturer id.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>List of van models</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetModelsByRangeNameAndManufacturerId(System.String,System.Int32)">
            <summary>
            Gets the models by range name and manufacturer identifier.
            </summary>
            <param name="range">The range name.</param>
            <param name="manufacturerId">The manufacturer identifier.</param>
            <returns>the models by range and manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetRangeFromId(System.Int32)">
            <summary>
            Gets the range from id.
            </summary>
            <param name="id">The range id.</param>
            <returns>The Van range</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetRangesByManufacturerId(System.Int32)">
            <summary>
            Gets the ranges by manufacturer id.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>List of van ranges</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanProvider.GetTechDataDerivativesFromId(System.Int32)">
            <summary>
            Gets the tech data derivatives from id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>List of van derivatives</returns>
        </member>
        <member name="T:Parkers.Vehicles.IVanValuationProvider">
            <summary>
            Van valuation provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVanValuationProvider.GetDerivativesByModelAndPlateId(System.Int32,System.Int32,Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the derivatives by model and plate id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>List of van derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanValuationProvider.GetPlatesByModelId(System.Int32,Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the plates by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="section">The section.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.IVanValuationProvider.GetValuation(System.Int32,System.Int32,Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>The Van valuation</returns>
        </member>
        <member name="T:Parkers.Vehicles.IYearPlateProvider">
            <summary>
            Year plate provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IYearPlateProvider.FromDate(System.DateTime)">
            <summary>
            Froms the date.
            </summary>
            <param name="date">The date to generate a year plate from.</param>
            <returns>The year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.IYearPlateProvider.FromId(System.Int32)">
            <summary>
            Froms the id.
            </summary>
            <param name="id">The year plate id.</param>
            <returns>The year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.IYearPlateProvider.FromYearAndPlate(System.Int32,System.String)">
            <summary>
            Froms the year and plate.
            </summary>
            <param name="year">The year plate year.</param>
            <param name="plate">The plate.</param>
            <returns>The year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.IYearPlateProvider.GetRange(Parkers.Vehicles.IYearPlate,Parkers.Vehicles.IYearPlate)">
            <summary>
            Gets the year plate range.
            </summary>
            <param name="plateFrom">The plate from.</param>
            <param name="plateTo">The plate to.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.IYearPlateProvider.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets the year plate range.
            </summary>
            <param name="plateFrom">The plate from.</param>
            <param name="plateTo">The plate to.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="T:Parkers.Vehicles.CarRangeEqualityComparer">
            <summary>
            Compares ranges on their Name property
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarRangeEqualityComparer.Equals(Parkers.Vehicles.ICarRange,Parkers.Vehicles.ICarRange)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="first">The first car range to compare.</param>
            <param name="second">The second car range to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarRangeEqualityComparer.GetHashCode(Parkers.Vehicles.ICarRange)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="range">The <see cref="T:System.Object"></see> for which a hash code is to be returned.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <exception cref="T:System.ArgumentNullException">The type of obj is a reference type and obj is null.</exception>
        </member>
        <member name="T:Parkers.Vehicles.OptionEqualityComparer">
            <summary>
            Option equality comparer
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.OptionEqualityComparer.Equals(Parkers.Vehicles.IOption,Parkers.Vehicles.IOption)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="first">The first object of type <paramref name="first"/> to compare.</param>
            <param name="second">The second object of type <paramref name="second"/> to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Parkers.Vehicles.OptionEqualityComparer.GetHashCode(Parkers.Vehicles.IOption)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <exception cref="T:System.ArgumentNullException">
            The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.
            </exception>
        </member>
        <member name="T:Parkers.Vehicles.ICarReview">
            <summary>
            Defines car review
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Against">
            <summary>
            Gets or sets the against.
            </summary>
            <value>
            The against.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.AlternativeIds">
            <summary>
            Gets or sets the alternative ids.
            </summary>
            <value>
            The alternative ids.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Alternatives">
            <summary>
            Gets the alternatives.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.AlternativesWithReviews">
            <summary>
            Gets the alternatives with reviews.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.BuyingNew">
            <summary>
            Gets or sets the buying new.
            </summary>
            <value>
            The buying new.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.BuyingNewRating">
            <summary>
            Gets or sets the buying new rating.
            </summary>
            <value>
            The buying new rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.BuyingUsed">
            <summary>
            Gets or sets the buying used.
            </summary>
            <value>
            The buying used.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.BuyingUsedRating">
            <summary>
            Gets or sets the buying used rating.
            </summary>
            <value>
            The buying used rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CheckBody">
            <summary>
            Gets or sets the check body.
            </summary>
            <value>
            The check body.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CheckEngine">
            <summary>
            Gets or sets the check engine.
            </summary>
            <value>
            The check engine.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CheckOther">
            <summary>
            Gets or sets the check other.
            </summary>
            <value>
            The check other.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CO2Max">
            <summary>
            Gets or sets the C o2 max.
            </summary>
            <value>
            The C o2 max.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CO2Min">
            <summary>
            Gets or sets the C o2 min.
            </summary>
            <value>
            The C o2 min.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Comfort">
            <summary>
            Gets or sets the comfort.
            </summary>
            <value>
            The comfort.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.ComfortRating">
            <summary>
            Gets or sets the comfort rating.
            </summary>
            <value>
            The comfort rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Cost">
            <summary>
            Gets or sets the cost.
            </summary>
            <value>
            The cost value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CostRating">
            <summary>
            Gets or sets the cost rating.
            </summary>
            <value>
            The cost rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Equipment">
            <summary>
            Gets or sets the equipment.
            </summary>
            <value>
            The equipment.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.EquipmentRating">
            <summary>
            Gets or sets the equipment rating.
            </summary>
            <value>
            The equipment rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.For">
            <summary>
            Gets or sets for.
            </summary>
            <value>
            the For value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.FRV12PriceRange">
            <summary>
            Gets the FR V12 price range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.FRV36PriceRange">
            <summary>
            Gets the FR V36 price range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Green">
            <summary>
            Gets or sets the green.
            </summary>
            <value>
            The green.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.GreenRating">
            <summary>
            Gets or sets the green rating.
            </summary>
            <value>
            The green rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Handling">
            <summary>
            Gets or sets the handling.
            </summary>
            <value>
            The handling.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.HandlingRating">
            <summary>
            Gets or sets the handling rating.
            </summary>
            <value>
            The handling rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.HasAlternativesWithReviews">
            <summary>
            Gets a value indicating whether this instance has alternatives with reviews.
            </summary>
            <value>
                <c>true</c> if this instance has alternatives with reviews; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.IGRange">
            <summary>
            Gets the IG range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Images">
            <summary>
            Gets the images.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MaxIG">
            <summary>
            Gets or sets the max IG.
            </summary>
            <value>
            The max IG.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MaxPriceFRV12">
            <summary>
            Gets the max price FR V12.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MaxPriceFRV36">
            <summary>
            Gets the max price FR V36.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MaxPriceNew">
            <summary>
            Gets or sets the max price new.
            </summary>
            <value>
            The max price new.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MaxPriceUsed">
            <summary>
            Gets or sets the max price used.
            </summary>
            <value>
            The max price used.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MinIG">
            <summary>
            Gets or sets the min IG.
            </summary>
            <value>
            The min IG.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MinPriceFRV12">
            <summary>
            Gets the min price FR V12.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MinPriceFRV36">
            <summary>
            Gets the min price FR V36.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MinPriceNew">
            <summary>
            Gets or sets the min price new.
            </summary>
            <value>
            The min price new.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.MinPriceUsed">
            <summary>
            Gets or sets the min price used.
            </summary>
            <value>
            The min price used.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Model">
            <summary>
            Gets the model.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.NcapAdult">
            <summary>
            Gets or sets the ncap adult.
            </summary>
            <value>
            The ncap adult.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.NcapChild">
            <summary>
            Gets or sets the ncap child.
            </summary>
            <value>
            The ncap child.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.NcapPedestrian">
            <summary>
            Gets or sets the ncap pedestrian.
            </summary>
            <value>
            The ncap pedestrian.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.NewPriceRange">
            <summary>
            Gets the new price range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Performance">
            <summary>
            Gets or sets the performance.
            </summary>
            <value>
            The performance.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.PerformanceRating">
            <summary>
            Gets or sets the performance rating.
            </summary>
            <value>
            The performance rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Practicality">
            <summary>
            Gets or sets the practicality.
            </summary>
            <value>
            The practicality.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.PracticalityRating">
            <summary>
            Gets or sets the practicality rating.
            </summary>
            <value>
            The practicality rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Reliability">
            <summary>
            Gets or sets the reliability.
            </summary>
            <value>
            The reliability.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.ReliabilityRating">
            <summary>
            Gets or sets the reliability rating.
            </summary>
            <value>
            The reliability rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Safety">
            <summary>
            Gets or sets the safety.
            </summary>
            <value>
            The safety.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.SafetyRating">
            <summary>
            Gets or sets the safety rating.
            </summary>
            <value>
            The safety rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Selling">
            <summary>
            Gets or sets the selling.
            </summary>
            <value>
            The selling.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.SellingRating">
            <summary>
            Gets or sets the selling rating.
            </summary>
            <value>
            The selling rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Servicing">
            <summary>
            Gets or sets the servicing.
            </summary>
            <value>
            The servicing.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
            <value>
            The summary.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.SummaryRating">
            <summary>
            Gets or sets the summary rating.
            </summary>
            <value>
            The summary rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.UpdateBody">
            <summary>
            Gets or sets the update body.
            </summary>
            <value>
            The update body.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.UpdateHeading">
            <summary>
            Gets or sets the update heading.
            </summary>
            <value>
            The update heading.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.UsedPriceRange">
            <summary>
            Gets the used price range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Warranty">
            <summary>
            Gets or sets the warranty.
            </summary>
            <value>
            The warranty.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Wheel">
            <summary>
            Gets or sets the wheel.
            </summary>
            <value>
            The wheel.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.WheelRating">
            <summary>
            Gets or sets the wheel rating.
            </summary>
            <value>
            The wheel rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.FirstPublished">
            <summary>
            Gets or sets the first published.
            </summary>
            <value>The first published.</value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.LastUpdated">
            <summary>
            Gets or sets the last updated.
            </summary>
            <value>The last updated.</value>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.OriginalAuthor">
            <summary>
            Gets or sets the original author.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.CompanyCarInfo">
            <summary>
            Gets or sets the company car info
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarReview.Video">
            <summary>
            Gets the model's video id
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarReview.FirstPublished">
            <summary>
            Gets or sets the first published.
            </summary>
            <value>The first published.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarReview.LastUpdated">
            <summary>
            Gets or sets the last updated.
            </summary>
            <value>The last updated.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarReview.OriginalAuthor">
            <summary>
            Gets or sets the original author.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarReview.CompanyCarInfo">
            <summary>
            Gets or sets the company car info
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarReview.Video">
            <summary>
            Gets the model's video id
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ReviewImage">
            <summary>
            Represents a review image
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ReviewImage.File">
            <summary>
            Path to the image file, taken to be relative to http://www.parkers.co.uk/images
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IComingSoonCaption">
            <summary>
            Defines coming soon caption
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.CaptionId">
            <summary>
            Gets the caption id.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.CaptionLeft">
            <summary>
            Gets the caption left.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.CaptionTop">
            <summary>
            Gets the caption top.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.ImageId">
            <summary>
            Gets or sets the image id.
            </summary>
            <value>
            The image id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.ImageLeft">
            <summary>
            Gets the image left.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.ImageTop">
            <summary>
            Gets the image top.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonCaption.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonImage.Captions">
            <summary>
            Gets or sets the captions.
            </summary>
            <value>
            The captions.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonImage.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>
            The file.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoonImage.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.ICompanyCarTaxResults">
            <summary>
            Defines company car tax results
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.CarAnnualTax">
            <summary>
            Gets or sets the car annual tax.
            </summary>
            <value>
            The car annual tax.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.CarMonthlyTax">
            <summary>
            Gets or sets the car monthly tax.
            </summary>
            <value>
            The car monthly tax.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.CarTaxCAV">
            <summary>
            Gets or sets the car tax CAV.
            </summary>
            <value>
            The car tax CAV.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.CC">
            <summary>
            Gets or sets the CC.
            </summary>
            <value>
            The cubic centilitres.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.EuroEmissions">
            <summary>
            Gets or sets the euro emissions.
            </summary>
            <value>
            The euro emissions.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.FuelAnnualTax">
            <summary>
            Gets or sets the fuel annual tax.
            </summary>
            <value>
            The fuel annual tax.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.FuelCAV">
            <summary>
            Gets or sets the fuel CAV.
            </summary>
            <value>
            The fuel CAV.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.FuelMonthlyTax">
            <summary>
            Gets or sets the fuel monthly tax.
            </summary>
            <value>
            The fuel monthly tax.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.FuelType">
            <summary>
            Gets or sets the type of the fuel.
            </summary>
            <value>
            The type of the fuel.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.GramsPerKm">
            <summary>
            Gets or sets the grams per km.
            </summary>
            <value>
            The grams per km.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.List">
            <summary>
            Gets or sets the list.
            </summary>
            <value>
            The results list.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.Rate">
            <summary>
            Gets or sets the rate.
            </summary>
            <value>
            The results rate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.TaxBenefitPercent">
            <summary>
            Gets or sets the tax benefit percent.
            </summary>
            <value>
            The tax benefit percent.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.TaxYear">
            <summary>
            Gets or sets the tax year.
            </summary>
            <value>
            The tax year.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICompanyCarTaxResults.TaxYearText">
            <summary>
            Gets the tax year text.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarProvider">
            <summary>
            Car provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetDataVersionInfo">
            <summary>
            Gets the data version info.
            </summary>
            <returns>The latest data version and timestamp</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.SetDataVersionPoll(System.Int32,System.String)">
            <summary>
            Sets the data version poll.
            </summary>
            <param name="version">The version.</param>
            <param name="server">The server.</param>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetServerDataVersions">
            <summary>
            Gets the server data versions.
            </summary>
            <returns>Data version by server</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.FindAllManufacturers(System.Predicate{Parkers.Vehicles.ICarManufacturer})">
            <summary>
            Finds all manufacturers.
            </summary>
            <param name="filter">The filter predicate.</param>
            <returns>List of car manufacturers</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetGenericBodyStylesForManufacturer(Parkers.Vehicles.ICarManufacturer)">
            <summary>
            Gets the generic body styles for manufacturer.
            </summary>
            <param name="manufacturer">The manufacturer.</param>
            <returns>Enumerable of generic body styles</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetDerivativeFromCapCode(System.String)">
            <summary>
            Gets the derivative from cap code.
            </summary>
            <param name="capCode">The CAP code.</param>
            <returns>Car derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetDerivativeFromId(System.Int32)">
            <summary>
            Gets the derivative from id.
            </summary>
            <param name="id">The derivative id.</param>
            <returns>Car derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetDerivativesByModelId(System.Int32)">
            <summary>
            Gets the derivatives by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>List of car model derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetAllDerivatives">
            <summary>
            Gets all derivatives.
            </summary>
            <returns>All the car derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetImagesByModelId(System.Int32)">
            <summary>
            Gets the images by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>Collection of review images</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetManufacturerFromId(System.Int32)">
            <summary>
            Gets the manufacturer from id.
            </summary>
            <param name="id">The manufacturer id.</param>
            <returns>Car manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetManufacturers">
            <summary>
            Gets the manufacturers.
            </summary>
            <returns>List of car manufacturers</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetModelFromId(System.Int32)">
            <summary>
            Gets the model from id.
            </summary>
            <param name="id">The model id.</param>
            <returns>The Car model</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetModelsByInsuranceGroup(System.Int32)">
            <summary>
            Gets the models by insurance group.
            </summary>
            <param name="group">The insurance group.</param>
            <returns>List of car models</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetModelsByManufacturerId(System.Int32)">
            <summary>
            Gets the models by manufacturer id.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>List of car models</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetModelsByRangeNameAndManufacturer(System.String,System.Int32)">
            <summary>
            Gets the models by range and manufacturer identifier.
            </summary>
            <param name="rangeName">The range name.</param>
            <param name="manufacturerId">The manufacturer identifier.</param>
            <returns>the models by range and manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetOptionsByDerivativeId(System.Int32)">
            <summary>
            Gets the options by derivative id.
            </summary>
            <param name="derivId">The derivative id.</param>
            <returns>List of options</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetRangeFromId(System.Int32)">
            <summary>
            Gets the range from id.
            </summary>
            <param name="id">The range id.</param>
            <returns>The Car range</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetRangesByManufacturerId(System.Int32)">
            <summary>
            Gets the ranges by manufacturer id.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>List of car ranges</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetReviewFromId(System.Int32)">
            <summary>
            Gets the review from id.
            </summary>
            <param name="id">The review id.</param>
            <returns>The Car review</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetTrimListFromModelId(System.Int32)">
            <summary>
            Gets the trim list from model id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>The Trim list</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetManufacturerIdsWithInsuranceInfo">
            <summary>
            Gets the manufacturer ids with insurance info.
            </summary>
            <returns>A list of manufacturer ids with insurance info</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetManufacturerModelIdsWithInsuranceInfo(System.Int32)">
            <summary>
            Gets the model ids with insurance info.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>A list of manufacturer model ids with insurance info</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetManufacturerIdsWithChecklist">
            <summary>
            Gets the manufacturer ids with checklist.
            </summary>
            <returns>a list of ids of manufacturers with at least one checklist</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetRangeIdsWithChecklistByManufacturer(System.Int32)">
            <summary>
            Gets the range ids with checklist by manufacturer.
            </summary>
            <returns>a list of ids of ranges with a checklist for a given manufacturer</returns>
            <param name="manufacturerId">The manufacturer id</param>
        </member>
        <member name="M:Parkers.Vehicles.ICarProvider.GetModelTrimEquipmentTable(System.Int32)">
            <summary>
            Gets the trim equipment table.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>A table with rows for equipment items and a tri state flag for trim level (none - no derivatives have the equipment, some or all)</returns>
        </member>
        <member name="T:Parkers.Vehicles.ICarTaxProvider">
            <summary>
            Car Tax provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetCompanyCarTax(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the company car tax.
            </summary>
            <param name="derivativeId">The derivative id.</param>
            <param name="taxYear">The tax year.</param>
            <param name="taxRate">The tax rate.</param>
            <param name="overrideValueP11D">The override value P11 D.</param>
            <param name="plateId">The plate id.</param>
            <returns>
            Company car tax results
            </returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetVEDDetailsByDerivId(System.Int32)">
            <summary>
            Gets the VED details by derivative id.
            </summary>
            <param name="derivativeId">The derivative id.</param>
            <returns>List of VED details</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetManufacturerIdsWithCarTaxData">
            <summary>
            Gets the manufacturer ids with car tax data.
            </summary>
            <returns>A list of manufacturer ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetModelIdsWithCarTaxData(System.Int32)">
            <summary>
            Gets the model ids with car tax data.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>A list of model ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetDerivativeIdsWithCarTaxData(System.Int32)">
            <summary>
            Gets the derivative ids with car tax data.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>A list of derivative ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetTaxYears">
            <summary>
            Gets the tax years.
            </summary>
            <returns>Returns a list of tax years</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarTaxProvider.GetTaxYearText(System.Int32)">
            <summary>
            Gets the tax year text.
            </summary>
            <param name="year">The calendar year for display.</param>
            <returns>Tax year in form y1/y2</returns>
        </member>
        <member name="P:Parkers.Vehicles.ICarTaxProvider.BandGDate">
            <summary>
            Gets the band G date.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarTaxProvider.ChangeoverDate">
            <summary>
            Gets the changeover date.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarValuationProvider">
            <summary>
            Car valuation provider interface
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.CreateValuation">
            <summary>
            Creates an empty valuation.
            </summary>
            <returns>A blank Valuation</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetAvailableOptions(System.Int32,System.Int32)">
            <summary>
            Gets the available options.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <returns>List of valuation options</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetDerivativesByModelAndPlateId(System.Int32,System.Int32)">
            <summary>
            Gets the derivatives by model and plate id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="plateId">The plate id.</param>
            <returns>List of car derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetMileageAdjustedValuation(System.Int32,System.Int32,System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the mileage adjusted valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="mileage">The mileage.</param>
            <param name="section">The section.</param>
            <returns>The valuation</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetOptionAdjustedValuation(System.Int32,System.Int32,System.Int32,System.Int32[],Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the option adjusted valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="mileage">The mileage.</param>
            <param name="optionCodes">The option codes.</param>
            <param name="section">The section.</param>
            <returns>The valuation (with options)</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetPlatesByModelId(System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the plates by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="section">The section.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetPlatesByDerivative(Parkers.Vehicles.ICarDerivative,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the plates by derivative id.
            </summary>
            <param name="derivative">The derivative.</param>
            <param name="section">The section.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.GetValuation(System.Int32,System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>The valuation</returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarValuationProvider.IsYearPlateAvailableInSection(System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Determines whether [is year plate available in section] [the specified plate id].
            </summary>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>
              <c>true</c> if [is year plate available in section] [the specified plate id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Parkers.Vehicles.IEquipmentItem">
            <summary>
            Defines the equipment item
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IEquipmentItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IEquipmentItem.OnAll">
            <summary>
            Gets or sets a value indicating whether [on all].
            </summary>
            <value>
                <c>true</c> if [on all]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IVEDDetails">
            <summary>
            Defines VED details
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVEDDetails.Combine(Parkers.Vehicles.IVEDDetails)">
            <summary>
            Combines the specified other.
            </summary>
            <param name="other">The other.</param>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.Band">
            <summary>
            Gets or sets the band.
            </summary>
            <value>
            The VED band.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.CO2">
            <summary>
            Gets the C o2.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.CO2Max">
            <summary>
            Gets or sets the C o2 max.
            </summary>
            <value>
            The C o2 max.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.CO2Min">
            <summary>
            Gets or sets the C o2 min.
            </summary>
            <value>
            The C o2 min.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.EffectivePeriod">
            <summary>
            Gets or sets the effective period.
            </summary>
            <value>
            The effective period.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.FirstYear">
            <summary>
            Gets or sets the first year.
            </summary>
            <value>
            The first year.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.FirstYearApplies">
            <summary>
            Gets or sets a value indicating whether [first year applies].
            </summary>
            <value>
              <c>true</c> if [first year applies]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.SixMonths">
            <summary>
            Gets or sets the six months.
            </summary>
            <value>
            The six months.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetails.TwelveMonths">
            <summary>
            Gets or sets the twelve months.
            </summary>
            <value>
            The twelve months.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IVEDDetailsSet">
            <summary>
            Defines VED details set
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVEDDetailsSet.CombineResults">
            <summary>
            Combines the results.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetailsSet.EffectivePeriod">
            <summary>
            Gets or sets the effective period.
            </summary>
            <value>
            The effective period.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetailsSet.FirstYearApplies">
            <summary>
            Gets or sets a value indicating whether [first year applies].
            </summary>
            <value>
                <c>true</c> if [first year applies]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVEDDetailsSet.Values">
            <summary>
            Gets the values.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.CarProvider">
            <summary>
            Data layer for CarManufacturer, CarRange, CarModel, CarDerivative
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarProvider.ComparerInstanceKey">
            <summary>
            Instance key for named instance
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarProvider.DatabaseName">
            <summary>
            The database name
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.SetDataVersionPoll(System.Int32,System.String)">
            <summary>
            Sets the data version poll.
            </summary>
            <param name="version">The version.</param>
            <param name="server">The server.</param>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDataVersionInfo">
            <summary>
            Gets the data version info.
            </summary>
            <returns>The latest data version and timestamp</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetServerDataVersions">
            <summary>
            Gets the server data versions.
            </summary>
            <returns>A collection of server data version info</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetReviewFromId(System.Int32)">
            <summary>
            Get the review for a given CARModId
            </summary>
            <param name="id">The CARModiI</param>
            <returns>The review</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelsByInsuranceGroup(System.Int32)">
            <summary>
            All models having a derivative with the given insurance group
            </summary>
            <param name="group">The insurance group</param>
            <returns>List of models in the group</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.FindAllManufacturers(System.Predicate{Parkers.Vehicles.ICarManufacturer})">
            <summary>
            Find a list of all manufacturers that match a given predicate
            </summary>
            <param name="filter">The manufacturer filter</param>
            <returns>The car manufacturers that match</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerFromId(System.Int32)">
            <summary>
            Gets the manufacturer from the database
            </summary>
            <param name="id">The manufacturer id</param>
            <returns>A car manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetRangeFromId(System.Int32)">
            <summary>
            Gets the range from the database
            </summary>
            <param name="id">The range id</param>
            <returns>A car range</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelFromId(System.Int32)">
            <summary>
            Gets the model from the database
            </summary>
            <param name="id">The model id</param>
            <returns>A car model</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDerivativeFromId(System.Int32)">
            <summary>
            Gets the derivative from the database
            </summary>
            <param name="id">The derivative id</param>
            <returns>A car derivatite</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetSortModelFromId(System.Int32)">
            <summary>
            Calls GetModelFromId to return an IModel
            </summary>
            <param name="id">The id</param>
            <returns>IModel of the id</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDerivativeFromCapCode(System.String)">
            <summary>
            Calls Der_Select_ByCapCode to create a derivative
            </summary>
            <param name="capCode">The cap code</param>
            <returns>A Car Derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturers">
            <summary>
            Gets a list of all manufacturers using GetManufacturerFromId and a cached list of IDs
            </summary>
            <returns>List of manufacturers</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelsByManufacturerId(System.Int32)">
            <summary>
            A list of all models for a given manufacturer
            </summary>
            <param name="manufacturerId">The manufacturer id</param>
            <returns>List of models</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelsByRangeNameAndManufacturer(System.String,System.Int32)">
            <summary>
            Gets the models by range and manufacturer identifier.
            </summary>
            <param name="rangeName">The range name.</param>
            <param name="manufacturerId">The manufacturer identifier.</param>
            <returns>the car models</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetRangesByManufacturerId(System.Int32)">
            <summary>
            A list of all ranges for a given manufacturer
            </summary>
            <param name="manufacturerId">The manufactuer id</param>
            <returns>The ranges</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetGenericBodyStylesForManufacturer(Parkers.Vehicles.ICarManufacturer)">
            <summary>
            Gets the generic body styles for manufacturer.
            </summary>
            <param name="manufacturer">The manufacturer.</param>
            <returns>The generic body styles for a manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetImagesByModelId(System.Int32)">
            <summary>
            Alll gallery images for a given model
            </summary>
            <param name="modelId">The model id</param>
            <returns>Collection of review images</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDerivativesByModelId(System.Int32)">
            <summary>
            A list of all derivatives for a given model
            </summary>
            <param name="modelId">The model id</param>
            <returns>The derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetOptionsByDerivativeId(System.Int32)">
            <summary>
            A list of all options and standard for the given derivative
            </summary>
            <param name="derivId">The derivative id</param>
            <returns>The list of options</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetTrimListFromModelId(System.Int32)">
            <summary>
            The trims and equipment details for a model
            </summary>
            <param name="modelId">The model id</param>
            <returns>The trim list</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerIdsWithInsuranceInfo">
            <summary>
            Gets the manufacturer ids with insurance infro
            </summary>
            <returns>List of manufacturer ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerModelIdsWithInsuranceInfo(System.Int32)">
            <summary>
            Gets the model ids for a manufacturer with insurance info
            </summary>
            <param name="manufacturerId">The manufacturer id</param>
            <returns>List of the model ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelTrimEquipmentTable(System.Int32)">
            <summary>
            Gets the model trim equipment table.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>A table with rows for equipment items and a tri state flag for trim level (none - no derivatives have the equipment, some or all)</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerIdsWithChecklist">
            <summary>
            A list of manufacturers which have at least one CarCheck
            </summary>
            <returns>The manufacturer ids with a checklist</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetRangeIdsWithChecklistByManufacturer(System.Int32)">
            <summary>
            Gets the range ids with checklist by manufacturer.
            </summary>
            <param name="manufacturerId">The manufacturer id</param>
            <returns>A list of ids of ranges with a checklist for a given manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetAllDerivatives">
            <summary>
            Gets all derivatives.
            </summary>
            <returns>All the derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetServerDataVersionsFromDataReader(System.Data.IDataRecord)">
            <summary>
            Gets the server data versions from data reader.
            </summary>
            <param name="dataRecord">The data record.</param>
            <returns>The data version</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerFromId(System.Int32,System.Boolean)">
            <summary>
            Calls Man_Select_ById or Man_S_All to create a manufacturer
            </summary>
            <param name="id">The manufacturer id</param>
            <param name="hintAll">Precache all manufacturers if the requested manufacturer is not already cached</param>
            <returns>A car manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetRangeFromId(System.Int32,System.Boolean)">
            <summary>
            Calls Ran_Select_ById or Ran_S_AllInManById to create a range
            </summary>
            <param name="id">The range id</param>
            <param name="hintManufacturer">Precache all ranges from this manufacturer if the requested range is not already cached</param>
            <returns>A car range</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelFromId(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Calls Mod_Select_ById or Mod_S_AllInManById to create a model
            </summary>
            <param name="id">The model id</param>
            <param name="hintManufacturer">If true, cache all models from this manufacturer is the requested range is not already cached</param>
            <param name="hintReview">If true,cache the CarReview at the same time if the model is not already cached</param>
            <param name="hintRange">If true, cache the CarRange object at the same time if the model is not already cached</param>
            <returns>A car model</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDerivativeFromId(System.Int32,System.Boolean)">
            <summary>
            Calls Der_Select_ById or Der_S_AllInModelById to create a derivative
            </summary>
            <param name="id">The derivative id</param>
            <param name="hintModel">If true, precache all derivatives for this model if this derivative is not already cached</param>
            <returns>A car derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetReviewImageFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Creates a review image from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>ReviewImage representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetReviewFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Creates a car review from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>CarReview representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Creates a car manufacturer from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>CarManufacturer representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetRangeFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Creates a car range from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>CarRange representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Creates a car model from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>CarModel representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDerivativeFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Creates a car derivative from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>CarDerivative representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetManufacturerIds">
            <summary>
            Gets the list of manufacturer ids
            </summary>
            <returns>The list of manufacturer ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetModelIds(System.Int32)">
            <summary>
            Gets the list of model ids for a manufacturer
            </summary>
            <param name="manufacturerId">The manufacturer id</param>
            <returns>The list of model ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetRangeIds(System.Int32)">
            <summary>
            Gets a list of ranges for a manufacturer
            </summary>
            <param name="manufacturerId">The manufacturer id</param>
            <returns>The list of ranges</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetDerivativeIds(System.Int32)">
            <summary>
            Gets the list of derivative ids for a model
            </summary>
            <param name="modelId">The model id</param>
            <returns>The list of derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.GetOptionFromDataReader(System.Data.IDataRecord)">
            <summary>
            Creates an option from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>Option representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.ProcessTrims(Parkers.Vehicles.TrimList,System.Data.SqlClient.SqlDataReader)">
            <summary>
            Process the trims
            </summary>
            <param name="result">The trim result</param>
            <param name="dataReader">The datareader</param>
        </member>
        <member name="M:Parkers.Vehicles.CarProvider.ProcessTrimEquipment(Parkers.Vehicles.TrimList,System.Data.SqlClient.SqlDataReader)">
            <summary>
            Process the trim equipment
            </summary>
            <param name="result">The trim list result</param>
            <param name="dataReader">The datareader</param>
        </member>
        <member name="T:Parkers.Vehicles.CarDerivative">
            <summary>
            Implementation of Derivative for cars
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Derivative">
            <summary>
            The lowest level of Parker's vehicle hierarchy, eg Ford Focus Hatchback (05 on) 1.6 LX 5d
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IDerivative">
            <summary>
            An interface representing the lowest level of Parker's vehicle hierarchy, eg Ford Focus Hatchback (05 on) 1.6 LX 5d
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Discontinued">
            <summary>
            Gets or sets the date that the derivative was last on sale, or DateTime.MaxValue if still in production
            </summary>
            <value>
            The discontinued date
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.FromYearPlate">
            <summary>
            Gets or sets First YearPlate for which used prices are available
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.FuelType">
            <summary>
            Gets or sets fuel type - "P", "D", or "A" - Petrol, Diesel, Alternative
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.FuelTypeFullName">
            <summary>
            Gets the full name of the fuel type.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.HasTechData">
            <summary>
            Gets or sets a value indicating whether details of dimensions, performance and running costs available?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Introduced">
            <summary>
            Gets or sets Date that the derivative was first on sale
            </summary>
            <value>
            The introduced date
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.IsDiscontinued">
            <summary>
            Gets a value indicating whether the derivative still in production?
            </summary>
            <value>
                <c>true</c> if this instance is discontinued; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.ListPrice">
            <summary>
            Gets or sets On-the-road price including VAT, VED and registration fee
            </summary>
            <value>The on-the-road price.</value>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Manufacturer">
            <summary>
            Gets The Manufacturer to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Model">
            <summary>
            Gets The Model to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Name">
            <summary>
            Gets or sets name eg "1.6 LX 5d"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.P11DPrice">
            <summary>
            Gets or sets Price not including vat, ved and reg fee
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Range">
            <summary>
            Gets The Range to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.ToYearPlate">
            <summary>
            Gets or sets Last YearPlate for which used prices are available
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Transmission">
            <summary>
            Gets or sets "M" or "A"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.TransmissionFullName">
            <summary>
            Gets the full name of the transmission.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.FuelCapacity">
            <summary>
            Gets or sets the fuel capacity.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.FuelDelivery">
            <summary>
            Gets or sets the fuel delivery.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Gears">
            <summary>
            Gets or sets the gears.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Valves">
            <summary>
            Gets or sets the number of valves
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.EuroEmissions">
            <summary>
            Gets or sets the euro emissions.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.CO2Emissions">
            <summary>
            Gets or sets the co2 emissions (in g/km)
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.BrakedTowing">
            <summary>
            Gets or sets the Braked Towing weight.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivative.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.Derivative.GetModel">
            <summary>
            Override to return the model to which the derivative belongs
            </summary>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Id">
            <summary>
            Primary key from the derivative table
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Name">
            <summary>
            eg "1.6 LX 5d"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Introduced">
            <summary>
            Date that the derivative was first on sale
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Discontinued">
            <summary>
            Date that the derivative was last on sale, or DateTime.MaxValue if still in production
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.IsDiscontinued">
            <summary>
            Is the derivative still in production?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.FuelType">
            <summary>
            "P", "D", or "A" - Petrol, Diesel, Alternative
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.FuelTypeFullName">
            <summary>
            Gets the full name of the fuel type.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Transmission">
            <summary>
            "M" or "A"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.TransmissionFullName">
            <summary>
            Gets the full name of the transmission.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.P11DPrice">
            <summary>
            Price not including vat, ved and reg fee
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.ListPrice">
            <summary>
            On-the-road price including VAT, VED and registration fee
            </summary>
            <value>The on-the-road price.</value>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.HasTechData">
            <summary>
            Are details of dimensions, performance and running costs available?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.FromYearPlate">
            <summary>
            First YearPlate for which used prices are available
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.ToYearPlate">
            <summary>
            Last YearPlate for which used prices are available
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Gears">
            <summary>
            Gets or sets the gears (eg "6 Speed")
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.FuelDelivery">
            <summary>
            Gets or sets the fuel delivery (eg "Multi point fuel injection")
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.FuelCapacity">
            <summary>
            Gets or sets the fuel capacity (in litres)
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.EuroEmissions">
            <summary>
            Gets or sets the euro emissions.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Valves">
            <summary>
            Gets or sets the number of valves
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.CO2Emissions">
            <summary>
            Gets or sets the co2 emissions (in g/km)
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.BrakedTowing">
            <summary>
            Gets or sets the Braked Towing weight.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Manufacturer">
            <summary>
            The Manufacturer to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Range">
            <summary>
            The Range to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Derivative.Model">
            <summary>
            The Model to which this derivative belongs
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarDerivative">
            <summary>
            Defines car derivative
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Bhp">
            <summary>
            Gets or sets the BHP.
            </summary>
            <value>
            The brake horsepower.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.CapCode">
            <summary>
            Gets or sets the cap code.
            </summary>
            <value>
            The cap code.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.CC">
            <summary>
            Gets or sets the CC.
            </summary>
            <value>
            The cubic centilitres.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.CO2Emissions">
            <summary>
            Gets or sets the C o2 emissions.
            </summary>
            <value>
            The C o2 emissions.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.CompanyCarTaxPercentage">
            <summary>
            Gets or sets the company car tax percentage.
            </summary>
            <value>
            The company car tax percentage.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Cylinders">
            <summary>
            Gets or sets the cylinders.
            </summary>
            <value>
            The cylinders.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Doors">
            <summary>
            Gets or sets the doors.
            </summary>
            <value>
            The doors.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Engine">
            <summary>
            Gets or sets the engine.
            </summary>
            <value>
            The engine.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasOptionData">
            <summary>
            Gets or sets a value indicating whether this instance has option data.
            </summary>
            <value>
                <c>true</c> if this instance has option data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasPdfReport">
            <summary>
            Gets a value indicating whether this instance has PDF report.
            </summary>
            <value>
                <c>true</c> if this instance has PDF report; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.InsuranceGroup">
            <summary>
            Gets or sets the insurance group.
            </summary>
            <value>
            The insurance group.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.LuggageCapacity">
            <summary>
            Gets or sets the luggage capacity.
            </summary>
            <value>
            The luggage capacity.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.MilesPerGallon">
            <summary>
            Gets or sets the miles per gallon.
            </summary>
            <value>
            The miles per gallon.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Model">
            <summary>
            Gets the model.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.NextYearBasicRate">
            <summary>
            Gets or sets the next year basic rate.
            </summary>
            <value>
            The next year basic rate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.NextYearHigherRate">
            <summary>
            Gets or sets the next year higher rate.
            </summary>
            <value>
            The next year higher rate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Options">
            <summary>
            Gets the options.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.OriginalBodystyle">
            <summary>
            Gets or sets the original bodystyle.
            </summary>
            <value>
            The original bodystyle.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.PdfReportDownloadUrl">
            <summary>
            Gets the PDF report download URL.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Seats">
            <summary>
            Gets or sets the seats.
            </summary>
            <value>
            The seats.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.TargetPrice">
            <summary>
            Gets or sets the target price.
            </summary>
            <value>
            The target price.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.ThisYearBasicRate">
            <summary>
            Gets or sets the this year basic rate.
            </summary>
            <value>
            The this year basic rate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.ThisYearHigherRate">
            <summary>
            Gets or sets the this year higher rate.
            </summary>
            <value>
            The this year higher rate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.ThreeYearValue">
            <summary>
            Gets or sets the three year value.
            </summary>
            <value>
            The three year value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.TopSpeed">
            <summary>
            Gets or sets the top speed.
            </summary>
            <value>
            The top speed.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.TorqueLbFt">
            <summary>
            Gets or sets the torque lb ft.
            </summary>
            <value>
            The torque lb ft.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.TorqueNm">
            <summary>
            Gets or sets the torque nm.
            </summary>
            <value>
            The torque nm.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Trim">
            <summary>
            Gets or sets the trim.
            </summary>
            <value>
            The trim of the car.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.TurningCircle">
            <summary>
            Gets or sets the turning circle.
            </summary>
            <value>
            The turning circle.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.UnbrakedTowing">
            <summary>
            Gets or sets the unbraked towing.
            </summary>
            <value>
            The unbraked towing.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Valves">
            <summary>
            Gets or sets the valves.
            </summary>
            <value>
            The valves.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.VedBand">
            <summary>
            Gets or sets the ved band.
            </summary>
            <value>
            The ved band.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.VedFull">
            <summary>
            Gets or sets the ved full.
            </summary>
            <value>The ved full.</value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Wheelbase">
            <summary>
            Gets or sets the wheelbase.
            </summary>
            <value>
            The wheelbase.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.ZeroToSixty">
            <summary>
            Gets or sets the zero to sixty.
            </summary>
            <value>
            The zero to sixty.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasBodyStyle">
            <summary>
            Gets or sets a value indicating whether has body style.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasFuelType">
            <summary>
            Gets or sets a value indicating whether has fuel type.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasTransmission">
            <summary>
            Gets or sets a value indicating whether has transmission.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasSeats">
            <summary>
            Gets or sets a value indicating whether has seats.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasMPG">
            <summary>
            Gets or sets a value indicating whether has mpg.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasMileage">
            <summary>
            Gets or sets a value indicating whether has mileage.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarDerivative.HasEngineSize">
            <summary>
            Gets or sets a value indicating whether has engine size.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarDerivative.GetModel">
            <summary>
            Backs the base.Model property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarDerivative.FromId(System.Int32)">
            <summary>
            Get a CarDerivative from a CARDerId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarDerivative.FromCapCode(System.String)">
            <summary>
            Get a CarDerivative from a CAP code
            </summary>
            <param name="capCode"></param>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.VedFull">
            <summary>
            Gets or sets the ved full.
            </summary>
            <value>The ved full.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Trim">
            <summary>
            eg "LX"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Engine">
            <summary>
            eg "1.6 Petrol"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.OriginalBodystyle">
            <summary>
            eg "Estate" where the model is called "3-Series Touring"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasOptionData">
            <summary>
            Are details of standard equipment and option prices available?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Options">
            <summary>
            List of standard equipment and option prices
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.CapCode">
            <summary>
            The CAP code, eg "BMX325XDS5EPIA4 1   "
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.ThreeYearValue">
            <summary>
            Predicted value three years after purchase
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.TargetPrice">
            <summary>
            Parker's Target Price for the derivative
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.InsuranceGroup">
            <summary>
            1 to 20
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Doors">
            <summary>
            e.g. 4
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Seats">
            <summary>
            e.g. 5
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.CC">
            <summary>
            Engine capacity
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Cylinders">
            <summary>
            Number of cylinders
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Bhp">
            <summary>
            Engine power in bhp
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.TopSpeed">
            <summary>
            Top speed in miles per hour
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.ZeroToSixty">
            <summary>
            0-60 time in seconds
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasBodyStyle">
            <summary>
            Gets or sets a value indicating whether has body style.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasFuelType">
            <summary>
            Gets or sets a value indicating whether has fuel type.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasTransmission">
            <summary>
            Gets or sets a value indicating whether has transmission.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasSeats">
            <summary>
            Gets or sets a value indicating whether has seats.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasMPG">
            <summary>
            Gets or sets a value indicating whether has mpg.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasMileage">
            <summary>
            Gets or sets a value indicating whether has mileage.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasEngineSize">
            <summary>
            Gets or sets a value indicating whether has engine size.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.MilesPerGallon">
            <summary>
            Fuel consumption
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Length">
            <summary>
            in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Width">
            <summary>
            in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Height">
            <summary>
            in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.TorqueNm">
            <summary>
            Engine torque in Newton-metres
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.TorqueLbFt">
            <summary>
            Engine torque in pound-feet
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Wheelbase">
            <summary>
            in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.LuggageCapacity">
            <summary>
            in litres
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.UnbrakedTowing">
            <summary>
            in kg
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.TurningCircle">
            <summary>
            in metres
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.VedBand">
            <summary>
            A to G, or "F/G", or "-"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.ThisYearBasicRate">
            <summary>
            Gets or sets the this year basic rate.
            </summary>
            <value>The this year basic rate.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.ThisYearHigherRate">
            <summary>
            Gets or sets the this year higher rate.
            </summary>
            <value>The this year higher rate.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.NextYearBasicRate">
            <summary>
            Gets or sets the this year basic rate.
            </summary>
            <value>The this year basic rate.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.NextYearHigherRate">
            <summary>
            Gets or sets the this year higher rate.
            </summary>
            <value>The this year higher rate.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.CompanyCarTaxPercentage">
            <summary>
            Gets or sets the company car tax percentage.
            </summary>
            <value>The company car tax percentage.</value>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Manufacturer">
            <summary>
            The CarManufacturer to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Range">
            <summary>
            The CarRange to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.Model">
            <summary>
            The CarModel to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.PdfReportDownloadUrl">
            <summary>
            The URL of the PDF for this derivative, or null if none exists
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarDerivative.HasPdfReport">
            <summary>
            Does this derivative have a PDF available for download?
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.CarManufacturer">
            <summary>
            Implements Manufacturer for cars
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Manufacturer">
            <summary>
            A set of Ranges, eg Ford
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IManufacturer">
            <summary>
            Defines manufacturer
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IManufacturer.FindModels(System.Predicate{Parkers.Vehicles.IModel})">
            <summary>
            Finds the models.
            </summary>
            <param name="filter">The filter.</param>
            <returns>list of models</returns>
        </member>
        <member name="M:Parkers.Vehicles.IManufacturer.HasModel(System.Predicate{Parkers.Vehicles.IModel})">
            <summary>
            Determines whether the specified filter has model.
            </summary>
            <param name="filter">The filter.</param>
            <returns>
                <c>true</c> if the specified filter has model; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.HasReview">
            <summary>
            Gets or sets a value indicating whether this instance has review.
            </summary>
            <value>
                <c>true</c> if this instance has review; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.HasTechData">
            <summary>
            Gets or sets a value indicating whether this instance has tech data.
            </summary>
            <value>
                <c>true</c> if this instance has tech data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.IsDiscontinued">
            <summary>
            Gets or sets a value indicating whether this instance is discontinued.
            </summary>
            <value>
                <c>true</c> if this instance is discontinued; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.Models">
            <summary>
            Gets the models.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.PopularityRank">
            <summary>
            Gets or sets the popularity rank.
            </summary>
            <value>
            The popularity rank.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IManufacturer.LogoFileName">
            <summary>
            Gets the logo filename.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.Manufacturer.FindModels(System.Predicate{Parkers.Vehicles.IModel})">
            <summary>
            Filter models for some predicate
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.Manufacturer.HasModel(System.Predicate{Parkers.Vehicles.IModel})">
            <summary>
            Does this manufacturer have at least one model matching the predicate?
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.Manufacturer.GetAllModels">
            <summary>
            Override to return all models for this manufacturer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.Manufacturer.GetAllRanges">
            <summary>
            Override to return all ranges for this manufacturer
            </summary>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.Id">
            <summary>
            The primary key on the Man table
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.Name">
            <summary>
            eg "Ford"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.Url">
            <summary>
            eg "www.ford.co.uk"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.PopularityRank">
            <summary>
            1 for the most-viewed manufacturer, and so on
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.IsDiscontinued">
            <summary>
            Does this manufacturer have at least one model which is not discontinued?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.HasReview">
            <summary>
            Do we have a review for at least one model?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.HasTechData">
            <summary>
            Do we have performance and dimensions data for at least one model?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.LogoFileName">
            <summary>
            Gets the logo filename.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Manufacturer.Models">
            <summary>
            All models for this manufacturer
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarManufacturer">
            <summary>
            Defines car manufacturer
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ICarManufacturer.FindModels(System.Predicate{Parkers.Vehicles.IModel})">
            <summary>
            Finds the models.
            </summary>
            <param name="filter">The filter.</param>
            <returns>Car model list</returns>
        </member>
        <member name="P:Parkers.Vehicles.ICarManufacturer.Models">
            <summary>
            Gets the models.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarManufacturer.Ranges">
            <summary>
            Gets the ranges.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarManufacturer.GenericBodyStyles">
            <summary>
            Gets the generic body styles.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarManufacturer.FindModels(System.Predicate{Parkers.Vehicles.IModel})">
            <summary>
            Filter models for some predicate
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarManufacturer.GetAllModels">
            <summary>
            Backs the base.Models property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarManufacturer.GetAllRanges">
            <summary>
            Backs the base.Ranges property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarManufacturer.FromId(System.Int32)">
            <summary>
            Get a CarManufacturer from a CARManId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.CarManufacturer.Models">
            <summary>
            All models for this manufacturer
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarManufacturer.Ranges">
            <summary>
            All ranges for this manufacturer
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarManufacturer.GenericBodyStyles">
            <summary>
            Gets the generic body styles.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarManufacturer.All">
            <summary>
            A list of all manufacturers
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.CarModel">
            <summary>
            Implementation of Model for cars
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Model">
            <summary>
            Represents a model
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IModel">
            <summary>
            Defines model
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IModel.FindDerivatives(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Finds the derivatives.
            </summary>
            <param name="filter">The filter.</param>
            <returns>list of derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.IModel.GetTrimList">
            <summary>
            Gets the trim list.
            </summary>
            <returns>a trim list</returns>
        </member>
        <member name="M:Parkers.Vehicles.IModel.HasDerivative(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Determines whether the specified filter has derivative.
            </summary>
            <param name="filter">The filter.</param>
            <returns>
                <c>true</c> if the specified filter has derivative; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Parkers.Vehicles.IModel.PopularityRank">
            <summary>
            Gets or sets the popularity rank.
            </summary>
            <value>The popularity rank.</value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.Popularity">
            <summary>
            Gets or sets the popularity.
            </summary>
            <value>The popularity.</value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.BodyStyle">
            <summary>
            Gets or sets the body style.
            </summary>
            <value>
            The body style.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.CAPBodyStyleId">
            <summary>
            Gets or sets the CAP body style id.
            </summary>
            <value>
            The CAP body style id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.CAPRanId">
            <summary>
            Gets or sets the CAP ran id.
            </summary>
            <value>
            The CAP ran id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.Derivatives">
            <summary>
            Gets the derivatives.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.DiscontinuedYear">
            <summary>
            Gets or sets the discontinued year.
            </summary>
            <value>
            The discontinued year.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.FromYearPlate">
            <summary>
            Gets or sets from year plate.
            </summary>
            <value>
            From year plate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.HasNewPrices">
            <summary>
            Gets a value indicating whether this instance has new prices.
            </summary>
            <value>
                <c>true</c> if this instance has new prices; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.HasReview">
            <summary>
            Gets or sets a value indicating whether this instance has review.
            </summary>
            <value>
                <c>true</c> if this instance has review; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.HasTechData">
            <summary>
            Gets or sets a value indicating whether this instance has tech data.
            </summary>
            <value>
                <c>true</c> if this instance has tech data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.Images">
            <summary>
            Gets the images.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.IntroducedYear">
            <summary>
            Gets or sets the introduced year.
            </summary>
            <value>
            The introduced year.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.IsDiscontinued">
            <summary>
            Gets a value indicating whether this instance is discontinued.
            </summary>
            <value>
                <c>true</c> if this instance is discontinued; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.MainImage">
            <summary>
            Gets the main image.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.MaxPriceNew">
            <summary>
            Gets the max price new.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.MaxPriceUsed">
            <summary>
            Gets or sets the max price used.
            </summary>
            <value>
            The max price used.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.MinPriceNew">
            <summary>
            Gets the min price new.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.MinPriceUsed">
            <summary>
            Gets the min price used.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.NameWithYears">
            <summary>
            Gets or sets the name with years.
            </summary>
            <value>
            The name with years.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.ProductionYears">
            <summary>
            Gets the production years.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IModel.ToYearPlate">
            <summary>
            Gets or sets to year plate.
            </summary>
            <value>
            To year plate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IModel.UrlVariantIndex">
            <summary>
            Gets the index of the URL variant.
            </summary>
            <value>
            The variant index which differenciates between distinct models for url purposes when they
            have the same property values used during URL construction/deconstruction
            </value>
        </member>
        <member name="F:Parkers.Vehicles.Model.popularityRank">
            <summary>
            Popularity rank backing field
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Model.popularity">
            <summary>
            Popularity backing field
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Model.discontinuedYear">
            <summary>
            The discontinued year backing field
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.Model.GetTrimList">
            <summary>
            Override to return the trim and generic equipment information
            </summary>
            <returns>Returns null trim list</returns>
        </member>
        <member name="M:Parkers.Vehicles.Model.FindDerivatives(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Filter derivatives for some predicate
            </summary>
            <param name="filter">The filter</param>
            <returns>The list of derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.Model.HasDerivative(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Does this model have at least one derivative matching the predicate?
            </summary>
            <param name="filter">The filter</param>
            <returns>Whether it has a derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.Model.GetAllDerivatives">
            <summary>
            Override to return all derivatives for this model
            </summary>
            <returns>The list of derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.Model.GetRange">
            <summary>
            Override to return the range to which this model belongs
            </summary>
            <returns>Null range</returns>
        </member>
        <member name="P:Parkers.Vehicles.Model.PopularityRank">
            <summary>
            Gets or sets the popularity rank.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.Popularity">
            <summary>
            Gets or sets the popularity.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.Id">
            <summary>
            Gets or sets primary key on the model table
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.RangeId">
            <summary>
            Gets or sets the range id
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.Name">
            <summary>
            Gets or sets the model name
            </summary>
            <remarks>e.g. "Focus Hatchback"</remarks>
        </member>
        <member name="P:Parkers.Vehicles.Model.DisplayName">
            <summary>
            Gets the display name
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.NameWithYears">
            <summary>
            Gets or sets the name with years
            </summary>
            <remarks>eg " Focus Hatchback (05 on)"</remarks>
        </member>
        <member name="P:Parkers.Vehicles.Model.BodyStyle">
            <summary>
            Gets or sets the body style
            </summary>
            <remarks>eg "Avant", or "Hatchback"</remarks>
        </member>
        <member name="P:Parkers.Vehicles.Model.ProductionYears">
            <summary>
            Gets the production years
            </summary>
            <remarks>eg if discontinued: "1999 to 2005", if still in productions: "2005 on"</remarks>
        </member>
        <member name="P:Parkers.Vehicles.Model.IntroducedYear">
            <summary>
            Gets or sets the year in which the model was first sold
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.DiscontinuedYear">
            <summary>
            Gets or sets the year in which the model was discontinued, or Int32.MaxValue if the model is still in production
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.IsDiscontinued">
            <summary>
            Gets a value indicating whether the model still on sale?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.HasReview">
            <summary>
            Gets or sets a value indicating whether we have reviewed this model
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.HasTechData">
            <summary>
            Gets or sets a value indicating whether we have performance and dimension data for this model
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.HasNewPrices">
            <summary>
            Gets a value indicating whether this model is current, and if we have list prices
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.FromYearPlate">
            <summary>
            Gets or sets first YearPlate for which used prices are available
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.ToYearPlate">
            <summary>
            Gets or sets last YearPlate for which used prices are available
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.MinPriceNew">
            <summary>
            Gets or sets Lowest list price
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.MaxPriceNew">
            <summary>
            Gets or sets Highest list price
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.MinPriceUsed">
            <summary>
            Gets or sets Lowest used price
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.MaxPriceUsed">
            <summary>
            Gets or sets Highest used price
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.CAPRanId">
            <summary>
            Gets or sets the CAP range ID, used to query Look2Buy
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.CAPBodyStyleId">
            <summary>
            Gets or sets the CAP bodystyle ID, used to query Look2Buy
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.Images">
            <summary>
            Gets all images in the gallery for this model
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.MainImage">
            <summary>
            Gets the main review image for this model
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.UrlVariantIndex">
            <summary>
            Gets or sets the index of the URL variant.
            </summary>
            <value>
            The variant index which differenciates between distinct models for url purposes when they
            have the same property values used during URL construction/deconstruction
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Model.Manufacturer">
            <summary>
            Gets Manufacturer to which this model belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.Range">
            <summary>
            Gets Range to which this model belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Model.Derivatives">
            <summary>
            Gets all derivatives for this model
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarModel">
            <summary>
            Defines car model
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ICarModel.GetMaxDieselAnnualFuelCost(System.Int32@)">
            <summary>
            Gets the max diesel annual fuel cost.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarModel.GetMinDieselAnnualFuelCost(System.Int32@)">
            <summary>
            Gets the min diesel annual fuel cost.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarModel.GetMaxUnleadedAnnualFuelCost(System.Int32@)">
            <summary>
            Gets the max unleaded annual fuel cost.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarModel.GetMinUnleadedAnnualFuelCost(System.Int32@)">
            <summary>
            Gets the min unleaded annual fuel cost.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.ICarModel.FindDerivatives(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Finds the derivatives.
            </summary>
            <param name="filter">The filter.</param>
            <returns>list of car derivatives</returns>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.AdultSeats">
            <summary>
            Gets or sets the adult seats.
            </summary>
            <value>
            The adult seats.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.CO2Max">
            <summary>
            Gets the C o2 max.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.CO2Min">
            <summary>
            Gets the C o2 min.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.Family">
            <summary>
            Gets or sets the family.
            </summary>
            <value>
            The family.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.FamilyPageName">
            <summary>
            Gets the name of the family page.
            </summary>
            <value>
            The name of the family page.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.FamilyPageUrl">
            <summary>
            Gets the family page URL.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.GenericBodyStyle">
            <summary>
            Gets or sets the generic body style.
            </summary>
            <value>
            The generic body style.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.HasCarCheck">
            <summary>
            Gets a value indicating whether this instance has car check.
            </summary>
            <value>
                <c>true</c> if this instance has car check; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.HasDieselDerivatives">
            <summary>
            Gets a value indicating whether this instance has diesel derivatives.
            </summary>
            <value>
            	<c>true</c> if this instance has diesel derivatives; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.HasPdfReport">
            <summary>
            Gets a value indicating whether this instance has PDF report.
            </summary>
            <value>
                <c>true</c> if this instance has PDF report; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.HasCompanyCarData">
            <summary>
            Gets a value indicating whether this instance has company car data.
            </summary>
            <value>
                <c>true</c> if this instance has company car data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MaxAnnualFuelCost">
            <summary>
            Gets the max annual fuel cost.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.IsLatest">
            <summary>
            Gets or sets a value indicating whether [is current].
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MaxPriceFRV12">
            <summary>
            Gets the max price FR V12.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MaxPriceFRV36">
            <summary>
            Gets the max price FR V36.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MaxVedFull">
            <summary>
            Gets the max ved full.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MinAnnualFuelCost">
            <summary>
            Gets the min annual fuel cost.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MinLuggageCapacity">
            <summary>
            Gets or sets the min luggage capacity.
            </summary>
            <value>
            The min luggage capacity.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MinPriceFRV12">
            <summary>
            Gets the min price FR V12.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MinPriceFRV36">
            <summary>
            Gets the min price FR V36.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.MinVedFull">
            <summary>
            Gets the min ved full.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.OriginalBodyStyle">
            <summary>
            Gets or sets the original body style.
            </summary>
            <value>
            The original body style.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.OtherModelsWithSameBodyOriginal">
            <summary>
            Gets or sets a value indicating whether [other models with same body original].
            </summary>
            <value>
                <c>true</c> if [other models with same body original]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.OwnerReviewCount">
            <summary>
            Gets or sets the owner review count.
            </summary>
            <value>
            The owner review count.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.Review">
            <summary>
            Gets the review.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.SeatsWithLuggage">
            <summary>
            Gets or sets the seats with luggage.
            </summary>
            <value>
            The seats with luggage.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarModel.DefaultImageName">
            <summary>
            Gets the default name of the image.
            </summary>
            <value>
            The default name of the image.
            </value>
        </member>
        <member name="M:Parkers.Vehicles.CarModel.GetRange">
            <summary>
            Backs the base.Range property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarModel.FindDerivatives(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Filter derivatives for some predicate
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarModel.GetAllDerivatives">
            <summary>
            Backs the base.Derivatives property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarModel.FromId(System.Int32)">
            <summary>
            Get a CarModel from a CARModId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.Family">
            <summary>
            Supermini, Large 4x4, etc
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.OriginalBodyStyle">
            <summary>
            eg "Estate" where the model is called "3-Series Touring"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.GenericBodyStyle">
            <summary>
            eg "Saloon", "Estate", "4x4", "MPV"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.AdultSeats">
            <summary>
            Number of adults that the model can comfortably seat, used by choosing tool
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.SeatsWithLuggage">
            <summary>
            Number of people that the model can seat while leaving space for their luggage, used by the choosing tool
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.OtherModelsWithSameBodyOriginal">
            <summary>
            True where a range contains two models with the same bodystyle, e.g. Civic Hatchback and Civic Type R.
            Used to build Oodle searches.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.Review">
            <summary>
            The review for this model
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.HasCarCheck">
            <summary>
            Does this model have a car check list to buy?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.OwnerReviewCount">
            <summary>
            Number of owner reviews
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MinLuggageCapacity">
            <summary>
            Smallest boot size in litres, used by the boot space part of reviews
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.HasPdfReport">
            <summary>
            Does at least one derivative have a PDF to download?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.CO2Min">
            <summary>
            Lowest CO2 emission figure
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.CO2Max">
            <summary>
            Highest CO2 emissions figure
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MinPriceFRV36">
            <summary>
            Lowest 3-year residual value
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MaxPriceFRV36">
            <summary>
            Highest 3-year residual value
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MinPriceFRV12">
            <summary>
            Lowest 1-year residual value
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MaxPriceFRV12">
            <summary>
            Highest 1-year residual value
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MaxAnnualFuelCost">
            <summary>
            Highest fuel cost
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MinAnnualFuelCost">
            <summary>
            Lowest fuel cost
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MaxVedFull">
            <summary>
            Highest annual road tax
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.MinVedFull">
            <summary>
            Lowest annual road tax
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.Images">
            <summary>
            All gallery images
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.FamilyPageUrl">
            <summary>
            A link to appear in model lists
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.FamilyPageName">
            <summary>
            Text for a link to appear in model lists
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.DefaultImageName">
            <summary>
            Gets the default name of the image.
            </summary>
            <value>
            The default name of the image.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.HasCompanyCarData">
            <summary>
            Gets a value indicating whether this instance has company car data.
            </summary>
            <value>
            	<c>true</c> if this instance has company car data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.IsLatest">
            <summary>
            Gets or sets a value indicating whether [is latest].
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.Manufacturer">
            <summary>
            The CarManufacturer to which this model belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarModel.Range">
            <summary>
            The CarRange to which this model belongs
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.CarRange">
            <summary>
            Implements Range for cars
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Range">
            <summary>
            A set of models, eg Ford Focus (05 on)
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IRange">
            <summary>
            Defines range
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IRange.DiscontinuedYear">
            <summary>
            Gets or sets the discontinued year.
            </summary>
            <value>
            The discontinued year.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.IntroducedYear">
            <summary>
            Gets or sets the introduced year.
            </summary>
            <value>
            The introduced year.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.IsDiscontinued">
            <summary>
            Gets a value indicating whether this instance is discontinued.
            </summary>
            <value>
                <c>true</c> if this instance is discontinued; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IRange.MaxPriceNew">
            <summary>
            Gets the max price new.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IRange.MinPriceNew">
            <summary>
            Gets the min price new.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IRange.Models">
            <summary>
            Gets the models.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IRange.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.NameWithYears">
            <summary>
            Gets or sets the name with years.
            </summary>
            <value>
            The name with years.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.PopularityRank">
            <summary>
            Gets or sets the popularity rank.
            </summary>
            <value>
            The popularity rank.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.Popularity">
            <summary>
            Gets or sets the popularity.
            </summary>
            <value>
            The popularity.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IRange.ProductionYears">
            <summary>
            Gets the production years.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.Range.GetManufacturer">
            <summary>
            Override to return the Manufacturer to which this range belongs
            </summary>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.Range.Id">
            <summary>
            Primary key on the range table
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.Name">
            <summary>
            eg Focus
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The name value.
            </value>
            <remarks>
            implemented to satisfy <see cref="T:Parkers.Vehicles.IKeyValueMappable"/>
            </remarks>
        </member>
        <member name="P:Parkers.Vehicles.Range.NameWithYears">
            <summary>
            eg Focus (05 on)
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.ProductionYears">
            <summary>
            eg "1999 to 2005" or "2005 on"
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.IntroducedYear">
            <summary>
            First year in which the range was sold
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.DiscontinuedYear">
            <summary>
            The year in which the range was discontinued, or Int32.MaxValue if the range is still in production
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.IsDiscontinued">
            <summary>
            Is the range still on sale?
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.PopularityRank">
            <summary>
            The popularity rank in relation to other ranges based on Google Analytics page impressions, 1 = most popular
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.Popularity">
            <summary>
            Gets or sets the popularity.
            </summary>
            <value>
            The popularity.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Range.Manufacturer">
            <summary>
            The Manufacturer to which this range belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.MinPriceNew">
            <summary>
            Lowest list price for all models within this range
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Range.MaxPriceNew">
            <summary>
            Highest list price for all models within this range
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarRange">
            <summary>
            Defines car range
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarRange.CarCheckProductId">
            <summary>
            Gets or sets the car check product id.
            </summary>
            <value>
            The car check product id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarRange.CarCheckSnippet">
            <summary>
            Gets or sets the car check snippet.
            </summary>
            <value>
            The car check snippet.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ICarRange.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarRange.GetManufacturer">
            <summary>
            Backs the base.Manufacturer property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.CarRange.FromId(System.Int32)">
            <summary>
            Get a CarRange from a CARRanId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.CarRange.CarCheckSnippet">
            <summary>
            A piece of text to use as an upsell for the CarCheck
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarRange.CarCheckProductId">
            <summary>
            Product ID to purchase for access to this model's CarCheck
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarRange.Manufacturer">
            <summary>
            The CarManufacturer to which this range belongs
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.CarTaxProvider">
            <summary>
            Car tax data provider class
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarTaxProvider.ParkersMetaDatabase">
            <summary>
            The parkers meta database name
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarTaxProvider.DatabaseName">
            <summary>
            The name of the database
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarTaxProvider.TaxYearStartMonth">
            <summary>
            The first month of the new tax year (April)
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarTaxProvider.changeoverDate">
            <summary>
            The changeover date
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarTaxProvider.bandGDate">
            <summary>
            The band G date
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetCompanyCarTax(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the company car tax from the database
            </summary>
            <param name="derivativeId">The derivative id</param>
            <param name="taxYear">The tax year</param>
            <param name="taxRate">The tax rate</param>
            <param name="p11DOverrideValue">The P11D override value</param>
            <param name="plateId">The yearplate id</param>
            <returns>CompanyCarTaxResults representing the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetVEDDetailsByDerivId(System.Int32)">
            <summary>
            Gets the VED details by derivate id
            </summary>
            <param name="derivId">The derivative id</param>
            <returns>The VED Details set</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetManufacturerIdsWithCarTaxData">
            <summary>
            Gets the manufacturer ids with car tax data
            </summary>
            <returns>The list of manufacturer ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetModelIdsWithCarTaxData(System.Int32)">
            <summary>
            Gets the model IDs with car tax data
            </summary>
            <param name="manufacturerId">The manufacturer ids</param>
            <returns>The list of model ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetDerivativeIdsWithCarTaxData(System.Int32)">
            <summary>
            Gets the list of derivate ids with car tax data
            </summary>
            <param name="modelId">The model id</param>
            <returns>The derivative ids</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetTaxYears">
            <summary>
            Gets the tax years.
            </summary>
            <returns>Returns a list of tax years</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetTaxYearText(System.Int32)">
            <summary>
            Gets the tax year text.
            </summary>
            <param name="year">The calendar year for display.</param>
            <returns>Tax year in form y1/y2</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetVEDFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets the VED from data reader
            </summary>
            <param name="reader">The data reader</param>
            <returns>The VED details</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetTaxFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets the tax results from the data reader
            </summary>
            <param name="reader">The data reader</param>
            <returns>The tax results</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetTaxYearFromDatabase(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets the tax year from database.
            </summary>
            <param name="reader">The reader.</param>
            <returns>A tax year object</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetTaxRatesForYear(System.Int32)">
            <summary>
            Gets the tax rates for year.
            </summary>
            <param name="taxYearId">The tax year id.</param>
            <returns>Collection of tax rates</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarTaxProvider.GetTaxRateFromDatabase(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets the tax rate from database.
            </summary>
            <param name="reader">The reader.</param>
            <returns>A tax rate object</returns>
        </member>
        <member name="P:Parkers.Vehicles.CarTaxProvider.ChangeoverDate">
            <summary>
            Gets the changeover date
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.CarTaxProvider.BandGDate">
            <summary>
            Gets the Band G date
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IComingSoon">
            <summary>
            Defines coming soon
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IComingSoon.FirstImageUrl(System.Int32,System.Int32)">
            <summary>
            Firsts the image URL.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>first image url</returns>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.CarSearchTerm">
            <summary>
            Gets or sets the car search term.
            </summary>
            <value>
            The car search term.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.FirstImage">
            <summary>
            Gets the first image.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.Heading">
            <summary>
            Gets or sets the heading.
            </summary>
            <value>
            The heading.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.Images">
            <summary>
            Gets or sets the images.
            </summary>
            <value>
            The images.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.OnSale">
            <summary>
            Gets or sets the on sale.
            </summary>
            <value>
            The on sale.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.PageId">
            <summary>
            Gets or sets the page id.
            </summary>
            <value>
            The page id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.Prices">
            <summary>
            Gets or sets the prices.
            </summary>
            <value>
            The prices.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.SecondaryHeading">
            <summary>
            Gets or sets the secondary heading.
            </summary>
            <value>
            The secondary heading.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.SecondaryImage">
            <summary>
            Gets or sets the secondary image.
            </summary>
            <value>
            The secondary image.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.SecondaryModel">
            <summary>
            Gets the secondary model.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.SecondaryModelId">
            <summary>
            Gets or sets the secondary model id.
            </summary>
            <value>
            The secondary model id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.SecondaryText">
            <summary>
            Gets or sets the secondary text.
            </summary>
            <value>
            The secondary text.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.Strapline">
            <summary>
            Gets or sets the strapline.
            </summary>
            <value>
            The strapline.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.SubHome">
            <summary>
            Gets or sets a value indicating whether [sub home].
            </summary>
            <value>
                <c>true</c> if [sub home]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IComingSoon.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Parkers.Vehicles.IComingSoon"/> is visible.
            </summary>
            <value>
                <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Parkers.Vehicles.TaxonomyProvider.GetUniqueRanges(Parkers.Vehicles.ListOfModel)">
            <summary>
            Get a list containing an arbitrary Range for each range name represented in the passed list of models
            </summary>
            <param name="models"></param>
            <returns></returns>
            <remarks>Assumes that all models from any range are consecutive in the list. Used to group a model list by range name.</remarks>
        </member>
        <member name="M:Parkers.Vehicles.TaxonomyProvider.GetRangesWithName(Parkers.Vehicles.ListOfModel,System.String)">
            <summary>
            Gets a list of all the Ranges represented in the passed list of models which have the specified name. 
            </summary>
            <param name="models"></param>
            <param name="rangeName"></param>
            <returns></returns>
            <remarks>Assumes that all models from any range are consecutive in the list. Used to group a model list by range name.</remarks>
        </member>
        <member name="M:Parkers.Vehicles.TaxonomyProvider.GetModelsInRange(Parkers.Vehicles.ListOfModel,Parkers.Vehicles.IRange)">
            <summary>
            Get all Models in the passed list which are in the passed Range
            </summary>
            <param name="models"></param>
            <param name="ran"></param>
            <returns></returns>
            <remarks>Used to group a model list by range name.</remarks>
        </member>
        <member name="T:Parkers.Vehicles.IDerivativeResult">
            <summary>
            Defines derivative result
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivativeResult.Derivative">
            <summary>
            Gets or sets the derivative.
            </summary>
            <value>
            The derivative.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IDerivativeResult.PlateText">
            <summary>
            Gets the plate text.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IDerivativeResult.Price">
            <summary>
            Gets or sets the price.
            </summary>
            <value>
            The price.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IDerivativeResult.YearPlate">
            <summary>
            Gets or sets the year plate.
            </summary>
            <value>
            The year plate.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.ITrim">
            <summary>
            Defines trim
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ITrim.BasedOn">
            <summary>
            Gets or sets the based on.
            </summary>
            <value>
            The based on.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ITrim.Equipment">
            <summary>
            Gets or sets the equipment.
            </summary>
            <value>
            The equipment.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.ITrim.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name value.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IOption">
            <summary>
            Defines option
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IOption.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IOption.CategoryId">
            <summary>
            Gets or sets the category id.
            </summary>
            <value>
            The category id.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IOption.Cost">
            <summary>
            Gets or sets the cost.
            </summary>
            <value>
            The cost value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IOption.CostDescription">
            <summary>
            Gets the cost description.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IOption.DateFrom">
            <summary>
            Gets or sets the date from.
            </summary>
            <value>
            The date from.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IOption.DateTo">
            <summary>
            Gets or sets the date to.
            </summary>
            <value>
            The date to.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IOption.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IOption.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type value.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.CarValuationProvider">
            <summary>
            Data access layer for used prices
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarValuationProvider.ValuationsAvailableFromYear">
            <summary>
            The year valutions are available from
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarValuationProvider.FreeValutionYears">
            <summary>
            the number of years prior to now for which free valuatuions are available
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarValuationProvider.DatabaseName">
            <summary>
            backfiled for valuations database
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.CarValuationProvider.yearPlateProvider">
            <summary>
            backing field for year plate provider
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.IsYearPlateAvailableInSection(System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Determines whether [is year plate available in section] [the specified plate id].
            </summary>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>
              <c>true</c> if [is year plate available in section] [the specified plate id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetPlatesByModelId(System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the plates by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="section">The section.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetPlatesByDerivative(Parkers.Vehicles.ICarDerivative,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the plates by derivative id.
            </summary>
            <param name="derivative">The derivative.</param>
            <param name="section">The section.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetDerivativesByModelAndPlateId(System.Int32,System.Int32)">
            <summary>
            Gets the derivatives by model and plate id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="plateId">The plate id.</param>
            <returns>List of car derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetMileageAdjustedValuation(System.Int32,System.Int32,System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the mileage adjusted valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="mileage">The mileage.</param>
            <param name="section">The section.</param>
            <returns>The valuation</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetValuation(System.Int32,System.Int32,Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>The valuation</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetOptionAdjustedValuation(System.Int32,System.Int32,System.Int32,System.Int32[],Parkers.Vehicles.CarValuationSection)">
            <summary>
            Gets the option adjusted valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="mileage">The mileage.</param>
            <param name="optionCodes">The option codes.</param>
            <param name="section">The section.</param>
            <returns>The valuation (with options)</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetAvailableOptions(System.Int32,System.Int32)">
            <summary>
            Gets the available options.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <returns>List of valuation options</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.CreateValuation">
            <summary>
            Creates an empty valuation.
            </summary>
            <returns>A blank Valuation</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.PopulateMileageAdjustedValuation(System.Int32,System.Int32,System.Int32,Parkers.Vehicles.CarValuationSection,Parkers.Vehicles.Valuation)">
            <summary>
            Populates a valuation object based on the mileage
            </summary>
            <param name="derivId">The derivative id</param>
            <param name="plateId">The plate id</param>
            <param name="mileage">The mileage</param>
            <param name="section">The valuation section</param>
            <param name="valuation">The valuation</param>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.PopulateValuationFromDataReader(System.Data.SqlClient.SqlDataReader,Parkers.Vehicles.Valuation)">
            <summary>
            Populates a valuation from a data reader
            </summary>
            <param name="reader">The datareader to use</param>
            <param name="valuation">The valuation to populate</param>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetFromYearPlateIdForSection(Parkers.Vehicles.CarValuationSection)">
            <summary>
            Get the "from" year plate ID for a section
            </summary>
            <param name="section">The car valuation section</param>
            <returns>The from year plate id</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetToYearPlateIdForSection(Parkers.Vehicles.CarValuationSection)">
            <summary>
            Get the "to" year plate ID for a section
            </summary>
            <param name="section">The car valuation section</param>
            <returns>The from year plate id</returns>
        </member>
        <member name="M:Parkers.Vehicles.CarValuationProvider.GetFreeValuationCutOffYear">
            <summary>
            Gets the year prior to which free valuations cease to be available
            </summary>
            <returns>The year</returns>
        </member>
        <member name="T:Parkers.Vehicles.ComingSoon">
            <summary>
            Cars that are coming soon
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ICarFamily">
            <summary>
            Defines car family
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarFamily.Id">
            <summary>
            Gets the identity.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.ICarFamily.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name of the car family.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.DerivativePredicates">
            <summary>
            Common filters for Model.FindDerivatives
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.TechData">
            <summary>
            The derivative has data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.CurrentTechData">
            <summary>
            The derivative is on sale and has data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.NewPrice">
            <summary>
            The derivative is current and we know its list price
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.UsedPrices">
            <summary>
            The derivative is current and we know its list price
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.PdfReport">
            <summary>
            The derivative has a PDF report available for download
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.InsuranceGroup">
            <summary>
            The derivative has an insurance group
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.DerivativePredicates.CO2">
            <summary>
            The derivative has a CO2 figure
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.FuelPriceProvider._lockObject">
            <summary>
            Holds the logger reference
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.FuelPriceProvider.HasRealValues">
            <summary>
            Are we using current average values from petrolprices.com, or fallback hardcoded values?
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IYearPlate">
            <summary>
            Defines the year plate
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IYearPlate.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Parkers.Vehicles.IYearPlate.EndDate">
            <summary>
            Gets the end date.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IYearPlate.Example">
            <summary>
            Gets the example.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IYearPlate.Plate">
            <summary>
            Gets the plate.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IYearPlate.StartDate">
            <summary>
            Gets the start date.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IYearPlate.Year">
            <summary>
            Gets the year.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation">
            <summary>
            Adjusted valuation representation
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.ParkersAdditionalValue">
            <summary>
            The amount to add to the cap data valuation to create the parkers valuation. 
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.RoundToNearest">
            <summary>
            Constant that will round to the round to the nearest
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.dealerPrice">
            <summary>
            The dealer price
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.privateSeller">
            <summary>
            The private seller
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.partEx">
            <summary>
            The part ex
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.CreateParkersValuation(System.Int32)">
            <summary>
            Creates the parkers valuation.
            </summary>
            <param name="value">The value.</param>
            <returns>the parkers valuation</returns>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.Mileage">
            <summary>
            Gets or sets the mileage.
            </summary>
            <value>
            The mileage.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.DealerPrice">
            <summary>
            Gets or sets the dealer price.
            </summary>
            <value>
            The dealer price.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.PrivateSeller">
            <summary>
            Gets or sets the private seller.
            </summary>
            <value>
            The private seller.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.AdjustedVanValuation.PartEx">
            <summary>
            Gets or sets the part ex.
            </summary>
            <value>
            The part ex.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.Valuations.Implementation.VanValuation">
            <summary>
            Van valuation interface
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Valuations.IVanValuation">
            <summary>
            Van valuation interface
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuation.Derivative">
            <summary>
            Gets or sets the derivative.
            </summary>
            <value>
            The derivative.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuation.OriginalPrice">
            <summary>
            Gets or sets the original price.
            </summary>
            <value>
            The original price.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuation.YearPlate">
            <summary>
            Gets or sets the year plate.
            </summary>
            <value>
            The year plate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuation.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuation.ValuationSegments">
            <summary>
            Gets or sets the valuation segments.
            </summary>
            <value>
            The valuation segments.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuation.Derivative">
            <summary>
            Gets or sets the derivative.
            </summary>
            <value>
            The derivative.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuation.OriginalPrice">
            <summary>
            Gets or sets the original price.
            </summary>
            <value>
            The original price.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuation.YearPlate">
            <summary>
            Gets or sets the year plate.
            </summary>
            <value>
            The year plate.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuation.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuation.ValuationSegments">
            <summary>
            Gets or sets the valuation segments.
            </summary>
            <value>
            The valuation segments.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment">
            <summary>
            Van valuation segment class
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.Valuations.IVanValuationSegment">
            <summary>
            Van valuation segment interface
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuationSegment.PrivateHigh">
            <summary>
            Gets or sets the private high.
            </summary>
            <value>
            The private good.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuationSegment.PrivateLow">
            <summary>
            Gets or sets the private low.
            </summary>
            <value>
            The private poor.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuationSegment.RetailHigh">
            <summary>
            Gets or sets the retail high.
            </summary>
            <value>
            The retail high.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuationSegment.RetailLow">
            <summary>
            Gets or sets the retail low.
            </summary>
            <value>
            The retail low.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuationSegment.AverageHigh">
            <summary>
            Gets or sets the average high.
            </summary>
            <value>
            The average high.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.IVanValuationSegment.AverageLow">
            <summary>
            Gets or sets the average low.
            </summary>
            <value>
            The average low.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment.PrivateHigh">
            <summary>
            Gets or sets the private high.
            </summary>
            <value>
            The private good.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment.PrivateLow">
            <summary>
            Gets or sets the private low.
            </summary>
            <value>
            The private poor.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment.RetailHigh">
            <summary>
            Gets or sets the retail high.
            </summary>
            <value>
            The retail high.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment.RetailLow">
            <summary>
            Gets or sets the retail low.
            </summary>
            <value>
            The retail low.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment.AverageHigh">
            <summary>
            Gets or sets the average high.
            </summary>
            <value>
            The average high.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.Valuations.Implementation.VanValuationSegment.AverageLow">
            <summary>
            Gets or sets the average low.
            </summary>
            <value>
            The average low.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IValuation">
            <summary>
            Defines valuation
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IValuation.AbbreviateForSms(System.String)">
            <summary>
            Abbreviates for SMS.
            </summary>
            <param name="input">The input.</param>
            <returns>input abbreviated for sms</returns>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.Derivative">
            <summary>
            Gets or sets the derivative.
            </summary>
            <value>
            The derivative.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.FranchiseDealer">
            <summary>
            Gets or sets the franchise dealer.
            </summary>
            <value>
            The franchise dealer.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.IndependentDealer">
            <summary>
            Gets or sets the independent dealer.
            </summary>
            <value>
            The independent dealer.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.Mileage">
            <summary>
            Gets or sets the mileage.
            </summary>
            <value>
            The mileage.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.OriginalPrice">
            <summary>
            Gets or sets the original price.
            </summary>
            <value>
            The original price.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.PartExchange">
            <summary>
            Gets or sets the part exchange.
            </summary>
            <value>
            The part exchange.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.PrivateGood">
            <summary>
            Gets or sets the private good.
            </summary>
            <value>
            The private good.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.PrivatePoor">
            <summary>
            Gets or sets the private poor.
            </summary>
            <value>
            The private poor.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.Year">
            <summary>
            Gets the year.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IValuation.YearPlate">
            <summary>
            Gets or sets the year plate.
            </summary>
            <value>
            The year plate.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IValuationOption">
            <summary>
            Defines valuation option
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IValuationOption.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuationOption.Cost">
            <summary>
            Gets or sets the cost.
            </summary>
            <value>
            The cost value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuationOption.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>
            The item value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuationOption.OptionCode">
            <summary>
            Gets or sets the option code.
            </summary>
            <value>
            The option code.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IValuationOption.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.IValuationWithOptions">
            <summary>
            Defines valuation with options
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IValuationWithOptions.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>
            The options.
            </value>
        </member>
        <member name="T:Parkers.Vehicles.ValuationResultType">
            <summary>
            ValuationResultType enum
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ValuationResultType.Error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ValuationResultType.MileageAdjusted">
            <summary>
            The mileage adjusted
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ValuationResultType.StandardMileage">
            <summary>
            The standard mileage
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ValuationResultType.MinimumMileage">
            <summary>
            The minimum mileage
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ValuationResultType.MaximumMileage">
            <summary>
            The maximum mileage
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ValuationResultType.VanEstimatedMileage">
            <summary>
            The van estimated mileage
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.VanClassification">
            <summary>
            Van classification object
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanClassification">
            <summary>
            The van classificatation interface
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanClassification.Id">
            <summary>
            Gets the id
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanClassification.Name">
            <summary>
            Gets the name
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanClassification.Description">
            <summary>
            Gets the description
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanClassification.LongDescription">
            <summary>
            Gets the long description
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanClassification.AverageMileage">
            <summary>
            Gets the average mileage.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanClassification.Id">
            <summary>
            Gets or sets the id
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanClassification.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanClassification.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanClassification.LongDescription">
            <summary>
            Gets or sets the long description
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanClassification.AverageMileage">
            <summary>
            Gets or sets the average mileage.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanReview">
            <summary>
            Defines van review
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Against">
            <summary>
            Gets or sets the against.
            </summary>
            <value>
            The against.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.AlternativeIds">
            <summary>
            Gets or sets the alternative ids.
            </summary>
            <value>
            The alternative ids.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Alternatives">
            <summary>
            Gets the alternatives.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.AlternativesWithReviews">
            <summary>
            Gets the alternatives with reviews.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Cargo">
            <summary>
            Gets or sets the cargo.
            </summary>
            <value>
            The cargo.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.CargoRating">
            <summary>
            Gets or sets the cargo rating.
            </summary>
            <value>
            The cargo rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Cost">
            <summary>
            Gets or sets the cost.
            </summary>
            <value>
            The cost value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.CostRating">
            <summary>
            Gets or sets the cost rating.
            </summary>
            <value>
            The cost rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Derivatives">
            <summary>
            Gets the derivatives.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.For">
            <summary>
            Gets or sets for.
            </summary>
            <value>
            the For value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.HasAlternativesWithReviews">
            <summary>
            Gets a value indicating whether this instance has alternatives with reviews.
            </summary>
            <value>
                <c>true</c> if this instance has alternatives with reviews; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.IGRange">
            <summary>
            Gets the IG range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Images">
            <summary>
            Gets the images.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.MaxIG">
            <summary>
            Gets or sets the max IG.
            </summary>
            <value>
            The max IG.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.MaxPriceNew">
            <summary>
            Gets or sets the max price new.
            </summary>
            <value>
            The max price new.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.MaxPriceUsed">
            <summary>
            Gets or sets the max price used.
            </summary>
            <value>
            The max price used.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.MinIG">
            <summary>
            Gets or sets the min IG.
            </summary>
            <value>
            The min IG.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.MinPriceNew">
            <summary>
            Gets or sets the min price new.
            </summary>
            <value>
            The min price new.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.MinPriceUsed">
            <summary>
            Gets or sets the min price used.
            </summary>
            <value>
            The min price used.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Model">
            <summary>
            Gets the model.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.ModelDiscontinued">
            <summary>
            Gets or sets the model discontinued.
            </summary>
            <value>
            The model discontinued.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.ModelIntroduced">
            <summary>
            Gets or sets the model introduced.
            </summary>
            <value>
            The model introduced.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.NewPriceRange">
            <summary>
            Gets the new price range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Reliability">
            <summary>
            Gets or sets the reliability.
            </summary>
            <value>
            The reliability.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.ReliabilityRating">
            <summary>
            Gets or sets the reliability rating.
            </summary>
            <value>
            The reliability rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Road">
            <summary>
            Gets or sets the road.
            </summary>
            <value>
            The road value.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.RoadRating">
            <summary>
            Gets or sets the road rating.
            </summary>
            <value>
            The road rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Safety">
            <summary>
            Gets or sets the safety.
            </summary>
            <value>
            The safety.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.SafetyRating">
            <summary>
            Gets or sets the safety rating.
            </summary>
            <value>
            The safety rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
            <value>
            The summary.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.SummaryRating">
            <summary>
            Gets or sets the summary rating.
            </summary>
            <value>
            The summary rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.UsedPriceRange">
            <summary>
            Gets the used price range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Wheel">
            <summary>
            Gets or sets the wheel.
            </summary>
            <value>
            The wheel.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.WheelRating">
            <summary>
            Gets or sets the wheel rating.
            </summary>
            <value>
            The wheel rating.
            </value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.FirstPublished">
            <summary>
            Gets or sets the first published.
            </summary>
            <value>The first published.</value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.LastUpdated">
            <summary>
            Gets or sets the last updated.
            </summary>
            <value>The last updated.</value>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.OriginalAuthor">
            <summary>
            Gets or sets the original author.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanReview.Video">
            <summary>
            Gets or sets the review's video id
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanReview.FirstPublished">
            <summary>
            Gets or sets the first published.
            </summary>
            <value>The first published.</value>
        </member>
        <member name="P:Parkers.Vehicles.VanReview.LastUpdated">
            <summary>
            Gets or sets the last updated.
            </summary>
            <value>The last updated.</value>
        </member>
        <member name="P:Parkers.Vehicles.VanReview.OriginalAuthor">
            <summary>
            Gets or sets the original author.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanReview.Video">
            <summary>
            Gets or sets the review's video id
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanDerivative">
            <summary>
            Defines van derivative
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Bhp">
            <summary>
            Gets or sets the BHP.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.BrakedTowing">
            <summary>
            Gets or sets the Braked Towing weight.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.CC">
            <summary>
            Gets or sets the CC.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Cylinders">
            <summary>
            Gets or sets the cylinders.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.InsuranceGroup">
            <summary>
            Gets or sets the insurance group.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.MilesPerGallon">
            <summary>
            Gets or sets the miles per gallon.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Payload">
            <summary>
            Gets or sets the payload.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Seats">
            <summary>
            Gets or sets the seats.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.TorqueLbFt">
            <summary>
            Gets or sets the torque lb ft.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.TorqueNm">
            <summary>
            Gets or sets the torque nm.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.TurningCircle">
            <summary>
            Gets or sets the turning circle.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Wheelbase">
            <summary>
            Gets or sets the wheelbase.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.FrontOverhang">
            <summary>
            Gets or sets the front overhang.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.RearOverhang">
            <summary>
            Gets or sets the rear overhang.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasCO2Emissions">
            <summary>
            Gets or sets a value indicating whether has co2 emissions.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasFuelType">
            <summary>
            Gets or sets a value indicating whether has fuel type.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasEnginePower">
            <summary>
            Gets or sets a value indicating whether has engine power.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasPayload">
            <summary>
            Gets or sets a value indicating whether has payload.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasTorque">
            <summary>
            Gets or sets a value indicating whether has torque.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasBrakedTowing">
            <summary>
            Gets or sets a value indicating whether has braked towing.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasSeats">
            <summary>
            Gets or sets a value indicating whether has seats.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasTransmission">
            <summary>
            Gets or sets a value indicating whether has transmission.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasEngineSize">
            <summary>
            Gets or sets a value indicating whether has engine size.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.HasMpg">
            <summary>
            Gets or sets a value indicating whether has mpg.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Model">
            <summary>
            Gets the model.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanDerivative.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanManufacturer">
            <summary>
            Defines van manufacturer
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanModel">
            <summary>
            Defines van model
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.IVanModel.FindDerivatives(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Finds the derivatives.
            </summary>
            <param name="filter">The filter.</param>
            <returns>a list of van derivatives</returns>
        </member>
        <member name="P:Parkers.Vehicles.IVanModel.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanModel.Range">
            <summary>
            Gets the range.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanModel.Review">
            <summary>
            Gets the review.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanModel.Classification">
            <summary>
            Gets the classification
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.IVanRange">
            <summary>
            Defines van range
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.IVanRange.Manufacturer">
            <summary>
            Gets the manufacturer.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ListOfRange">
            <summary>
            Wrapper for List&lt;Range&gt; to get round the fact that you can't convert List&lt;CarRange&gt; to List&lt;Range&gt;.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ListOfModel">
            <summary>
            Wrapper for List&lt;Model&gt; to get round the fact that you can't convert List&lt;CarModel&gt; to List&lt;Model&gt;.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ListOfManufacturer">
            <summary>
            Wrapper for List&lt;Manufacturer&gt; to get round the fact that you can't convert List&lt;CarManufacturer&gt; to List&lt;Manufacturer&gt;.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ListOfDerivative">
            <summary>
            Wrapper for List&lt;Derivative&gt; to get round the fact that you can't convert List&lt;CarDerivative&gt; to List&lt;Derivative&gt;.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ManufacturerPredicates">
            <summary>
            Common filters for CarManufacturer.FindAll etc
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.TechData">
            <summary>
            The manufacturer has data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.Current">
            <summary>
            The manufacturer has at least one model still on sale
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.CurrentWithReview">
            <summary>
            The manufacturer has at least one model still on sale with a review
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.CurrentTechData">
            <summary>
            The manufacturer has at least one model still on sale with data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.HasContent">
            <summary>
            The manufacturer has at least one review or at least on car for sale
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.ManufacturerPredicates.MostPopular(System.Int32)">
            <summary>
            Matches the given number of most popular manufacturers
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.Review">
            <summary>
            The manufacturer has data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.UsedPrices">
            <summary>
            The manufacturer has used prices
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.OwnerReviews">
            <summary>
            The manufacturer has a model with an owner review
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.CO2">
            <summary>
            The manufacturer has at least one derivative with a CO2 figure
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.InsuranceGroup">
            <summary>
            The manufacturer has at least one derivative with an insurance group
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ManufacturerPredicates.HasPdfReports">
            <summary>
            The manufacturer has at least one derivative with a PDF report.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.ModelPredicates">
            <summary>
            Common filters for Manufacturer.FindModels
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.HasReview">
            <summary>
            The model has a published review
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.NewPrices">
            <summary>
            The model is current and we know its list price
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.Current">
            <summary>
            The model is still on sale
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.CurrentWithReview">
            <summary>
            The model is still on sale and has a review
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.TechData">
            <summary>
            The model has data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.CurrentTechData">
            <summary>
            The model is still on sale and has data for the Facts and Figures section
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.HasContent">
            <summary>
            The model has a review or at least on car for sale
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.PdfReport">
            <summary>
            The model has at least one derivative with a PDF report
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.UsedPrices">
            <summary>
            The model has at least one derivative with used prices
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.OwnerReviews">
            <summary>
            The model has at least one owner review
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.CO2">
            <summary>
            The model has at least one derivative with a CO2 figure
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.ModelPredicates.InsuranceGroup">
            <summary>
            The model has at least one derivative with an insurance group
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.PdfProvider">
            <summary>
            Tracks which derivatives have PDF reports available, and provides URLs for those reports
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.PdfProvider.PdfSuffix">
            <summary>
            Pdf file suffix
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.PdfProvider.PdfUrlConfigKey">
            <summary>
            Key to pdf url config entry
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.PdfProvider.derivsIdsWithInfoPacks">
            <summary>
            Static list of Ids for derivs that have info packs
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.PdfProvider.#cctor">
            <summary>
            Initializes the <see cref="T:Parkers.Vehicles.PdfProvider"/> class.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.PdfProvider.HasPdfReport(Parkers.Vehicles.IDerivative)">
            <summary>
            Does the given derivative have a PDF available?
            </summary>
            <param name="deriv">The derivative</param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.PdfProvider.DownloadUrl(Parkers.Vehicles.IDerivative)">
            <summary>
            The URL of the PDF for a given derivative, or null if none exists
            </summary>
            <param name="deriv">The derivative </param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.PdfProvider.BuildDerivativePdfList">
            <summary>
            Builds the derivative PDF list.
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.VanDerivative">
            <summary>
            Implementation of Derivative for vans
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanDerivative.FromId(System.Int32)">
            <summary>
            Get a VanDerivative from a VANDerId
            </summary>
            <param name="id">The id</param>
            <returns>The van derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanDerivative.GetModel">
            <summary>
            Backs the base.Model property
            </summary>
            <returns>The model</returns>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Bhp">
            <summary>
            Gets or sets the Engine power in bhp
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.CC">
            <summary>
            Gets or sets the Engine capacity
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Cylinders">
            <summary>
            Gets or sets the Number of cylinders
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Height">
            <summary>
            Gets or sets the height in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.InsuranceGroup">
            <summary>
            Gets or sets the Insurance group (1 to 20)
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.MilesPerGallon">
            <summary>
            Gets or sets the miles per gallon.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Payload">
            <summary>
            Gets or sets the payload in kg
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Seats">
            <summary>
            Gets or sets the seats.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.TorqueLbFt">
            <summary>
            Gets or sets the torque lb ft.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.TorqueNm">
            <summary>
            Gets or sets the torque nm.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.TurningCircle">
            <summary>
            Gets or sets the turning circle in metres
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Wheelbase">
            <summary>
            Gets or sets the wheelbase in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Width">
            <summary>
            Gets or sets the width in mm
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.FuelDelivery">
            <summary>
            Gets or sets the fuel delivery
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Gears">
            <summary>
            Gets or sets the gears
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.FrontOverhang">
            <summary>
            Gets or sets the front overhang.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.RearOverhang">
            <summary>
            Gets or sets the rear overhang.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasCO2Emissions">
            <summary>
            Gets or sets a value indicating whether has co2 emissions.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasFuelType">
            <summary>
            Gets or sets a value indicating whether has fuel type.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasEnginePower">
            <summary>
            Gets or sets a value indicating whether has engine power.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasPayload">
            <summary>
            Gets or sets a value indicating whether has payload.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasTorque">
            <summary>
            Gets or sets a value indicating whether has torque.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasBrakedTowing">
            <summary>
            Gets or sets a value indicating whether has braked towing.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasSeats">
            <summary>
            Gets or sets a value indicating whether has seats.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasTransmission">
            <summary>
            Gets or sets a value indicating whether has transmission.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasEngineSize">
            <summary>
            Gets or sets a value indicating whether has engine size.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.HasMpg">
            <summary>
            Gets or sets a value indicating whether has mpg.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Manufacturer">
            <summary>
            Gets the VanManufacturer to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Range">
            <summary>
            Gets the VanRange to which this derivative belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanDerivative.Model">
            <summary>
            Gets the VanModel to which this derivative belongs
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.VanManufacturer">
            <summary>
            Implements Manufacturer for vans
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanManufacturer.GetAllModels">
            <summary>
            Backs the base.Models property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.VanManufacturer.FromId(System.Int32)">
            <summary>
            Get a VanManufacturer from a VANManId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.VanManufacturer.FindAll(System.Predicate{Parkers.Vehicles.IManufacturer})">
            <summary>
            A list of all manufacturers that match a given predicate
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.VanManufacturer.FindAll(System.Predicate{Parkers.Vehicles.IVanManufacturer})">
            <summary>
            A list of all manufacturers that match a given predicate
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.VanManufacturer.All">
            <summary>
            A list of all manufacturers
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.VanModel">
            <summary>
            Implementation of Model for vans
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VanModel.vanProvider">
            <summary>
            The van provider
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanModel.FindDerivatives(System.Predicate{Parkers.Vehicles.IDerivative})">
            <summary>
            Filter derivatives for some predicate
            </summary>
            <param name="filter">The derivative filter</param>
            <returns>The derivaties</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanModel.FromId(System.Int32)">
            <summary>
            Get a VanModel from a VANModId
            </summary>
            <param name="id">The model id</param>
            <returns>The model</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanModel.GetRange">
            <summary>
            Backs the base.Range property
            </summary>
            <returns>The range</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanModel.GetAllDerivatives">
            <summary>
            Backs the base.Derivatives property
            </summary>
            <returns>All the derivatives</returns>
        </member>
        <member name="P:Parkers.Vehicles.VanModel.Review">
            <summary>
            Gets the review for this model
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanModel.Images">
            <summary>
            All gallery images
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanModel.Manufacturer">
            <summary>
            Gets the VanManufacturer to which the model belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanModel.Range">
            <summary>
            Gets the VanRange to which the model belongs
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanModel.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:Parkers.Vehicles.VanModel.Classification">
            <summary>
            Gets or sets the classification
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.VanRange">
            <summary>
            Implements Range for vans
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanRange.GetManufacturer">
            <summary>
            Backs the base.Manufacturer property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.VanRange.FromId(System.Int32)">
            <summary>
            Get a VanRange from a VANRanId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:Parkers.Vehicles.VanRange.Manufacturer">
            <summary>
            The VanManufacturer to which this range belongs
            </summary>
        </member>
        <member name="T:Parkers.Vehicles.VanValuationProvider">
            <summary>
            VanValuationProvder implementation
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VanValuationProvider.Database">
            <summary>
            Database to use.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.GetPlatesByModelId(System.Int32,Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the plates by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="section">The section.</param>
            <returns> List of year plates </returns>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.GetDerivativesByModelAndPlateId(System.Int32,System.Int32,Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the derivatives by model and plate id.
            </summary>
            <param name="modelId">The model id.</param>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns> List of van derivatives </returns>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.GetValuation(System.Int32,System.Int32,Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the valuation.
            </summary>
            <param name="derivId">The derivative id.</param>
            <param name="plateId">The plate id.</param>
            <param name="section">The section.</param>
            <returns>
            The Van valuation
            </returns>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.PopulateVanValuation(System.Int32,System.Int32,Parkers.Vehicles.VanValuationSection,Parkers.Vehicles.Valuations.Implementation.VanValuation)">
            <summary>
            Populates the mileage adjusted valuation.
            </summary>
            <param name="derivId">The deriv identifier.</param>
            <param name="plateId">The plate identifier.</param>
            <param name="section">The section.</param>
            <param name="valuation">The valuation.</param>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.GetOriginalPrice(System.Int32,System.Int32)">
            <summary>
            Gets the original price.
            </summary>
            <param name="derivId">The deriv identifier.</param>
            <param name="yearPlateId">The year plate identifier.</param>
            <returns>
            the original price for derivative
            </returns>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.PopulateValuationSegmentFromDataReader(System.Data.SqlClient.SqlDataReader,Parkers.Vehicles.Valuations.Implementation.VanValuation)">
            <summary>
            Populates the valuation segment from the data reader.
            </summary>
            <param name="dataReader">The data reader.</param>
            <param name="valuation">The valuation.</param>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.GetYearPlateFromForSection(Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the year plate from for section.
            </summary>
            <param name="section">The section.</param>
            <returns>the from year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanValuationProvider.GetYearPlateToForSection(Parkers.Vehicles.VanValuationSection)">
            <summary>
            Gets the year plate to for section.
            </summary>
            <param name="section">The section.</param>
            <returns>the to year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.Valuation.AbbreviateForSms(System.String)">
            <summary>
            Abbreviate body styles etc to help to squeeze model and derivative names into SMS messages.
            </summary>
            <param name="input">A string</param>
            <returns>The input string with certain words abbreviated</returns>
        </member>
        <member name="M:Parkers.Vehicles.Valuation.FormatPrice(System.Int32)">
            <summary>
            Rounded to £5, then "#,##0"
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:Parkers.Vehicles.Valuation.FormatPriceUnrounded(System.Int32)">
            <summary>
            "#,##0"
            </summary>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="T:Parkers.Search.DerivativeResult">
            <summary>
            Represents a single derivative/plate result
            </summary>
        </member>
        <member name="M:Parkers.Search.DerivativeResult.#ctor(System.Data.IDataRecord)">
            <summary>
            Create a SearchResult from an IDataRecord (probably a SqlDataReader)
            </summary>
            <param name="record">an IDataRecord</param>
        </member>
        <member name="T:Parkers.Search.ModelResult">
            <summary>
            Represents a model-level result
            </summary>
        </member>
        <member name="M:Parkers.Search.ModelResult.#ctor(System.Data.IDataRecord)">
            <summary>
            Create a ModelResult from an IDataRecord (probably a SqlDataReader)
            </summary>
            <param name="record">an IDataRecord</param>
        </member>
        <member name="T:Parkers.Vehicles.VanProvider">
            <summary>
            Van provider class
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VanProvider.ComparerInstanceKey">
            <summary>
            Instance key for named instance
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VanProvider.PsValue">
            <summary>
             The value of PS for PS BHP conversion
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VanProvider.BhpValue">
            <summary>
            The value of BHP for PS to BHP converstion
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VanProvider.DatabaseName">
            <summary>
            The name of the database to query
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetSortModelFromId(System.Int32)">
            <summary>
            Calls GetModelFromId to return an IModel
            </summary>
            <param name="id">The id</param>
            <returns>IModel of the id</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetManufacturerFromId(System.Int32)">
            <summary>
            Gets the manufacturer from id.
            </summary>
            <param name="id">The manufacturer id.</param>
            <returns>Van manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetRangeFromId(System.Int32)">
            <summary>
            Gets the range from id.
            </summary>
            <param name="id">The range id.</param>
            <returns>The Van range</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetModelFromId(System.Int32)">
            <summary>
            Gets the model from id.
            </summary>
            <param name="id">The model id.</param>
            <returns>The Van model</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetDerivativeFromId(System.Int32)">
            <summary>
            Gets the derivative from id.
            </summary>
            <param name="id">The derivative id.</param>
            <returns>Van derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetDerivativeFromCapCode(System.String)">
            <summary>
            Gets the derivative from cap code.
            </summary>
            <param name="capCode">The cap code.</param>
            <returns>Van derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetDerivativesFromId(System.Int32)">
            <summary>
            Gets the derivatives from id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>list of van derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetManufacturers">
            <summary>
            Gets the manufacturers.
            </summary>
            <returns>List of van manufacturers</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetModelsByManufacturerId(System.Int32)">
            <summary>
            Gets the models by manufacturer id.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>List of van models</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetModelsByRangeNameAndManufacturerId(System.String,System.Int32)">
            <summary>
            Gets the models by range name and manufacturer identifier.
            </summary>
            <param name="rangeName">The range name.</param>
            <param name="manufacturerId">The manufacturer identifier.</param>
            <returns>the models by range and manufacturer</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetRangesByManufacturerId(System.Int32)">
            <summary>
            Gets the ranges by manufacturer id.
            </summary>
            <param name="manufacturerId">The manufacturer id.</param>
            <returns>List of van ranges</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetTechDataDerivativesFromId(System.Int32)">
            <summary>
            Gets the tech data derivatives from id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>List of van derivatives</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetImagesByModelId(System.Int32)">
            <summary>
            Gets the images by model id.
            </summary>
            <param name="modelId">The model id.</param>
            <returns>Collection of review images</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetManufacturerFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets a van manufacturer from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>Van range representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetRangeFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets a van range from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>Van range representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetModelFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets a van model from a data reader
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>Van model representation of the data</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetDerivativeFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Builds a van derivative representation from the data
            </summary>
            <param name="dataReader">The data reader</param>
            <returns>The van derivative</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.PrefixLogoFileName(System.String)">
            <summary>
            Prefix the logo name
            </summary>
            <param name="logoFileName">The logo name</param>
            <returns>The prefixed logo name</returns>
        </member>
        <member name="M:Parkers.Vehicles.VanProvider.GetReviewImageFromDataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Gets a review image from a data reader
            </summary>
            <param name="dataReader">The datareader</param>
            <returns>ReviewImage representation of the data</returns>
        </member>
        <member name="T:Parkers.Vehicles.YearPlateProvider">
            <summary>
            Year plate provider
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.YearPlateProvider.yearPlates">
            <summary>
            Year plates collection
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.YearPlateProvider.FromId(System.Int32)">
            <summary>
            Froms the id.
            </summary>
            <param name="id">The year plate id.</param>
            <returns>The year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.YearPlateProvider.FromDate(System.DateTime)">
            <summary>
            Froms the date.
            </summary>
            <param name="date">The date to generate a year plate from.</param>
            <returns>The year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.YearPlateProvider.FromYearAndPlate(System.Int32,System.String)">
            <summary>
            Froms the year and plate.
            </summary>
            <param name="year">The year plate year.</param>
            <param name="plate">The plate.</param>
            <returns>The year plate</returns>
        </member>
        <member name="M:Parkers.Vehicles.YearPlateProvider.GetRange(Parkers.Vehicles.IYearPlate,Parkers.Vehicles.IYearPlate)">
            <summary>
            Gets the year plate range.
            </summary>
            <param name="plateFrom">The plate from.</param>
            <param name="plateTo">The plate to.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.YearPlateProvider.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets the year plate range.
            </summary>
            <param name="plateFrom">The plate from.</param>
            <param name="plateTo">The plate to.</param>
            <returns>List of year plates</returns>
        </member>
        <member name="M:Parkers.Vehicles.YearPlateProvider.Populate">
            <summary>
            Populates this instance.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VEDDetails.GetBand(System.Collections.Generic.List{Parkers.Vehicles.IVEDDetails})">
            <summary>
            Gets a list of distinct VED bands in the passed list, separated by '/' and omitting any nulls.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Parkers.Vehicles.VehicleUtility">
            <summary>
            Vehicle utility
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VehicleUtility.DatabaseName">
            <summary>
            The Parkers Car database name
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VehicleUtility.DefaultResult">
            <summary>
            The default lookup result
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VehicleUtility.fuelTypeNames">
            <summary>
            Fuel type code to name lookup table
            </summary>
        </member>
        <member name="F:Parkers.Vehicles.VehicleUtility.transmissionNames">
            <summary>
            Transmission code to name lookup table
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VehicleUtility.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Parkers.Vehicles.VehicleUtility"/> class.
            </summary>
        </member>
        <member name="M:Parkers.Vehicles.VehicleUtility.GetFuelTypeFullName(System.String)">
            <summary>
            Gets the full name of the fuel type.
            </summary>
            <param name="abbreviation">The abbreviation.</param>
            <returns>The full name of the fuel type</returns>
        </member>
        <member name="M:Parkers.Vehicles.VehicleUtility.GetAllFuelTypeFullNames">
            <summary>
            Gets all fuel type full names (including the default catch-all)
            </summary>
            <returns>Collection of fuel type names</returns>
        </member>
        <member name="M:Parkers.Vehicles.VehicleUtility.GetTransmissionFullName(System.String)">
            <summary>
            Gets the full name of the transmission.
            </summary>
            <param name="abbreviation">The abbreviation.</param>
            <returns>The full name of the transmission type</returns>
        </member>
        <member name="M:Parkers.Vehicles.VehicleUtility.GetAllTransmissionFullNames">
            <summary>
            Gets all transmission full names (including the default catch-all value)
            </summary>
            <returns>Collection of transmission type full names</returns>
        </member>
        <member name="M:Parkers.Vehicles.VehicleUtility.PopulateDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>
            Populates the dictionary.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="storedProcedureName">Name of the stored proceudre.</param>
            <param name="codeColumnName">Name of the code column.</param>
            <param name="descriptionColumnName">Name of the description column.</param>
        </member>
    </members>
</doc>
