//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Parkers.Postcodes.com.bauerhosting.postcodes {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PostcodeServiceSoap", Namespace="http://postcodes.emaphosting.com")]
    public partial class PostcodeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PostcodeService() {
            this.Url = global::Parkers.Postcodes.Properties.Settings.Default.Parkers_Postcodes_com_bauerhosting_postcodes_PostcodeService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPostcodeCompletedEventHandler GetPostcodeCompleted;
        
        /// <remarks/>
        public event GetLocationCompletedEventHandler GetLocationCompleted;
        
        /// <remarks/>
        public event GetAddressCompletedEventHandler GetAddressCompleted;
        
        /// <remarks/>
        public event GetAddressesCompletedEventHandler GetAddressesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://postcodes.emaphosting.com/GetPostcode", RequestNamespace="http://postcodes.emaphosting.com", ResponseNamespace="http://postcodes.emaphosting.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResult GetPostcode(string address, string site) {
            object[] results = this.Invoke("GetPostcode", new object[] {
                        address,
                        site});
            return ((AddressResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostcodeAsync(string address, string site) {
            this.GetPostcodeAsync(address, site, null);
        }
        
        /// <remarks/>
        public void GetPostcodeAsync(string address, string site, object userState) {
            if ((this.GetPostcodeOperationCompleted == null)) {
                this.GetPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostcodeOperationCompleted);
            }
            this.InvokeAsync("GetPostcode", new object[] {
                        address,
                        site}, this.GetPostcodeOperationCompleted, userState);
        }
        
        private void OnGetPostcodeOperationCompleted(object arg) {
            if ((this.GetPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostcodeCompleted(this, new GetPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://postcodes.emaphosting.com/GetLocation", RequestNamespace="http://postcodes.emaphosting.com", ResponseNamespace="http://postcodes.emaphosting.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GridRef GetLocation(string postcode, string site) {
            object[] results = this.Invoke("GetLocation", new object[] {
                        postcode,
                        site});
            return ((GridRef)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationAsync(string postcode, string site) {
            this.GetLocationAsync(postcode, site, null);
        }
        
        /// <remarks/>
        public void GetLocationAsync(string postcode, string site, object userState) {
            if ((this.GetLocationOperationCompleted == null)) {
                this.GetLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationOperationCompleted);
            }
            this.InvokeAsync("GetLocation", new object[] {
                        postcode,
                        site}, this.GetLocationOperationCompleted, userState);
        }
        
        private void OnGetLocationOperationCompleted(object arg) {
            if ((this.GetLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationCompleted(this, new GetLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://postcodes.emaphosting.com/GetAddress", RequestNamespace="http://postcodes.emaphosting.com", ResponseNamespace="http://postcodes.emaphosting.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResult GetAddress(string postcode, string houseNumber, string site) {
            object[] results = this.Invoke("GetAddress", new object[] {
                        postcode,
                        houseNumber,
                        site});
            return ((AddressResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressAsync(string postcode, string houseNumber, string site) {
            this.GetAddressAsync(postcode, houseNumber, site, null);
        }
        
        /// <remarks/>
        public void GetAddressAsync(string postcode, string houseNumber, string site, object userState) {
            if ((this.GetAddressOperationCompleted == null)) {
                this.GetAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressOperationCompleted);
            }
            this.InvokeAsync("GetAddress", new object[] {
                        postcode,
                        houseNumber,
                        site}, this.GetAddressOperationCompleted, userState);
        }
        
        private void OnGetAddressOperationCompleted(object arg) {
            if ((this.GetAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressCompleted(this, new GetAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://postcodes.emaphosting.com/GetAddresses", RequestNamespace="http://postcodes.emaphosting.com", ResponseNamespace="http://postcodes.emaphosting.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressResult[] GetAddresses(string postcode, string houseNumber, string site) {
            object[] results = this.Invoke("GetAddresses", new object[] {
                        postcode,
                        houseNumber,
                        site});
            return ((AddressResult[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressesAsync(string postcode, string houseNumber, string site) {
            this.GetAddressesAsync(postcode, houseNumber, site, null);
        }
        
        /// <remarks/>
        public void GetAddressesAsync(string postcode, string houseNumber, string site, object userState) {
            if ((this.GetAddressesOperationCompleted == null)) {
                this.GetAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressesOperationCompleted);
            }
            this.InvokeAsync("GetAddresses", new object[] {
                        postcode,
                        houseNumber,
                        site}, this.GetAddressesOperationCompleted, userState);
        }
        
        private void OnGetAddressesOperationCompleted(object arg) {
            if ((this.GetAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressesCompleted(this, new GetAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://postcodes.emaphosting.com")]
    public partial class AddressResult {
        
        private string line1Field;
        
        private string line2Field;
        
        private string townField;
        
        private string countyField;
        
        private string postcodeField;
        
        /// <remarks/>
        public string Line1 {
            get {
                return this.line1Field;
            }
            set {
                this.line1Field = value;
            }
        }
        
        /// <remarks/>
        public string Line2 {
            get {
                return this.line2Field;
            }
            set {
                this.line2Field = value;
            }
        }
        
        /// <remarks/>
        public string Town {
            get {
                return this.townField;
            }
            set {
                this.townField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://postcodes.emaphosting.com")]
    public partial class GridRef {
        
        private int eastingField;
        
        private int northingField;
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public int Easting {
            get {
                return this.eastingField;
            }
            set {
                this.eastingField = value;
            }
        }
        
        /// <remarks/>
        public int Northing {
            get {
                return this.northingField;
            }
            set {
                this.northingField = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPostcodeCompletedEventHandler(object sender, GetPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLocationCompletedEventHandler(object sender, GetLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GridRef Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GridRef)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAddressCompletedEventHandler(object sender, GetAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAddressesCompletedEventHandler(object sender, GetAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressResult[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591